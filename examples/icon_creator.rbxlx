<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX68DC93458EBF4F539E45DB8F091B7ED6">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AutoJointsMode">0</token>
			<string name="CollisionGroups">Default^0^1</string>
			<Ref name="CurrentCamera">RBX998F38DDAFC3410BB676992D74810520</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<bool name="FilteringEnabled">true</bool>
			<float name="Gravity">196.199997</float>
			<CoordinateFrame name="ModelInPrimary">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Workspace</string>
			<Ref name="PrimaryPart">null</Ref>
			<bool name="StreamingEnabled">false</bool>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TemporaryLegacyPhysicsSolverOverrideStreaming">false</bool>
			<bool name="TerrainWeldsFixed">true</bool>
		</Properties>
		<Item class="Camera" referent="RBX998F38DDAFC3410BB676992D74810520">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-8.12091732</X>
					<Y>6.99314308</Y>
					<Z>-0.26703757</Z>
					<R00>-0.0801475644</R00>
					<R01>0.231428355</R01>
					<R02>-0.969544888</R02>
					<R10>-0</R10>
					<R11>0.972674072</R11>
					<R12>0.232175246</R12>
					<R20>0.996783078</R20>
					<R21>0.0186082814</R21>
					<R22>-0.0779574439</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-6.18182659</X>
					<Y>6.52879238</Y>
					<Z>-0.111122608</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">Camera</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX38E48700A5DC4262BE89F558B78A5B3E">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0470588244</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Model" referent="RBX2B5A9EC2D46B4BAFBCD35BE1DC9F7550">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Gun</string>
				<Ref name="PrimaryPart">null</Ref>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Part" referent="RBX6B54D1530D5F4D9AA52115C2434176A9">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>5</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.580000222</X>
						<Y>1.34000099</Y>
						<Z>2.48000145</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX5AE70C62E2D1436194FFBC7673FB864C">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=130099641</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.649999976</X>
							<Y>0.649999976</Y>
							<Z>0.649999976</Z>
						</Vector3>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxassetid://209727730</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBXF4605158E13E46E8AE17CAB4315D9210">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284702562</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="Name">Baseplate</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX87FF35580CA345AC9290036D5FF18860">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBXA410A6EADA3D40EA968C8D50775E9A92">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX3137322422C948A6B4C12285987EA3CB">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX72AF97A392D64591B985B5E58688F350">
		<Properties>
			<bool name="BubbleChatEnabled">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX88317E9DC3CB4448BAEDB18119D2F1EA">
		<Properties>
			<string name="Name">Instance</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX3201EC20B6794A8688C55157BACC0971">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">56832</int>
			<float name="RespawnTime">5</float>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX18EC82B987E4402988D9130108CB8990">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX3A089E644DE341D2BF48DCAF52A91CF3">
		<Properties>
			<string name="Name">TweenService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBXE0612651F9C04070BE3A04A1639921E1">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX54B9E59AC0094D538B20EDB10308A4FC">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX46FD5E90C80E438181E40C9D1B50A6E5">
			<Properties>
				<string name="Name">StarterCharacterScripts</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX0B5659F014A041FFB8A74BC77A07100B">
		<Properties>
			<string name="Name">StarterPack</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX9017D666C65444F58A924234E1846477">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ScreenGui" referent="RBX0C4B6AA17BFC460FB58918579F961486">
			<Properties>
				<bool name="AutoLocalize">true</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<bool name="IgnoreGuiInset">false</bool>
				<string name="Name">AppTemplate</string>
				<bool name="ResetOnSpawn">false</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<BinaryString name="Tags"></BinaryString>
				<token name="ZIndexBehavior">1</token>
			</Properties>
			<Item class="ImageLabel" referent="RBX1A7735E83409455EA05D6E2C11230C61">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<bool name="AutoLocalize">true</bool>
					<Color3 name="BackgroundColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><url>rbxassetid://3110239646</url></Content>
					<Color3 name="ImageColor3">
						<R>0.211764723</R>
						<G>0.211764723</G>
						<B>0.211764723</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<int name="LayoutOrder">0</int>
					<string name="Name">PluginWindowTemplate</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>300</XO>
						<YS>0</YS>
						<YO>200</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<token name="ScaleType">1</token>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>490</XO>
						<YS>0</YS>
						<YO>290</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>7</X>
							<Y>7</Y>
						</min>
						<max>
							<X>7</X>
							<Y>7</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="ViewportFrame" referent="RBX84FC0DCF6B554C14A6B3B60D5DB4614E">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<bool name="AutoLocalize">true</bool>
						<Color3 name="BackgroundColor3">
							<R>0.0980392247</R>
							<G>1</G>
							<B>0</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<int name="BorderSizePixel">0</int>
						<CoordinateFrame name="CameraCFrame">
							<X>0</X>
							<Y>5</Y>
							<Z>2</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="CameraFieldOfView">1.22173059</float>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Color3 name="ImageColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="ImageTransparency">0</float>
						<int name="LayoutOrder">0</int>
						<string name="Name">IconViewportTemplate</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>5</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>280</XO>
							<YS>0</YS>
							<YO>280</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Camera" referent="RBXC6645E8BF4694E46A1D0C07B2152D310">
						<Properties>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>5</Y>
								<Z>2</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<Ref name="CameraSubject">null</Ref>
							<token name="CameraType">0</token>
							<float name="FieldOfView">70</float>
							<CoordinateFrame name="Focus">
								<X>0</X>
								<Y>0</Y>
								<Z>-5</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="HeadLocked">true</bool>
							<float name="HeadScale">1</float>
							<string name="Name">Camera</string>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXCC96DC88FED14440A6444EFA0C5477EF">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<bool name="AutoLocalize">true</bool>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">PropertiesPanelTemplate</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>285</XO>
							<YS>0</YS>
							<YO>5</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>280</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBXF4FBA328D7A4434DADFE12B15EC1B485">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Icon Creator</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXE1C0FACF5D08457E85CA4DAA6A843808">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ViewportProperties</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>90</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXFF3F3F4D111D48A8BE41B0D7A6D83358">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="Name">X_Label</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">X</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXFBD596FFA85442D6BFD91D06EB6E39BB">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="Name">Y_Label</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>100</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Y</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXA2FB437546CE4A839440BC2429FB26F4">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="Name">AspectRatio_Label</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Aspect Ratio</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX971EF0A404BE4011906123E82F814D10">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://3110238916</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">AspectRatio_Locked</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>178</XO>
									<YS>0</YS>
									<YO>66</YO>
								</UDim2>
								<Content name="PressedImage"><null></null></Content>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>18</XO>
									<YS>0</YS>
									<YO>18</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBXF64BFB1D1A5B458EA69C4B679DFE0093">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>0.0941176564</R>
									<G>0.0941176564</G>
									<B>0.0941176564</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<bool name="MultiLine">false</bool>
								<string name="Name">Y_Input</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<Color3 name="PlaceholderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<string name="PlaceholderText"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>130</XO>
									<YS>0</YS>
									<YO>34</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>22</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">256</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX426D196758114385A46E1E7569E10434">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>0.0941176564</R>
									<G>0.0941176564</G>
									<B>0.0941176564</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<bool name="MultiLine">false</bool>
								<string name="Name">AspectRatio_Input</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<Color3 name="PlaceholderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<string name="PlaceholderText"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>100</XO>
									<YS>0</YS>
									<YO>64</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>22</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">1:1</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX01B27F0CDB3B4B04B021D007D8C5958C">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>0.0941176564</R>
									<G>0.0941176564</G>
									<B>0.0941176564</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<bool name="MultiLine">false</bool>
								<string name="Name">X_Input</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<Color3 name="PlaceholderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<string name="PlaceholderText"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>34</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>22</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">256</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX43EE658B49024082A21DA53802788877">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">SelectingAsset_Input</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>195</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextButton" referent="RBX67FEDD981C8B4748B9DB8E78BDC28D3A">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>0.82745105</R>
										<G>0.937254965</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<bool name="Modal">false</bool>
									<string name="Name">BoolCheckboxTemplate</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX03D9651D81C04EA3AADDF857F4CAF037">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="Name">Message</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-35</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Update with selection</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">1</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX6DE5ED4A45D94A3FBA5D115553F8FEAA">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>0.0941176564</R>
											<G>0.0941176564</G>
											<B>0.0941176564</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<bool name="Modal">false</bool>
										<string name="Name">Checkbox</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-8</XO>
											<YS>1</YS>
											<YO>-8</YO>
										</UDim2>
										<token name="SizeConstraint">2</token>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="ImageLabel" referent="RBX71C72345F8C94877A4B3816E86A2AC7F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoLocalize">true</bool>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>rbxassetid://3111101141</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<int name="LayoutOrder">0</int>
											<string name="Name">Checked</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>2</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>1</YS>
												<YO>-4</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXE7EAA74BE56D4258A9336AB53C475E01">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">CameraSliders</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>120</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>160</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX1D689EFD5CD749A0BDD54E153979B927">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">YawInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX4F0BB163EE484154925776953AB50691">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">CompositeSliderInputTemplate</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX61BA1D2AD3ED4C1DAB4383E23D89CB8D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="Name">TitleLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>190</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Yaw Rotation: -180</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX6ACBDCB3BAFC43C2AEC990744D8469F5">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Slider</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>145</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXCA7ADA0780DB4140BA4FF363BF6027DC">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoLocalize">true</bool>
											<Color3 name="BackgroundColor3">
												<R>0.972549081</R>
												<G>0.972549081</G>
												<B>0.972549081</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">SliderTemplate</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX4446F73596C04606A0AA2FF6DC9266FC">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">BackgroundBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX78B5EDA5DA774DD69357611E263F4FD4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">SliderBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="TextBox" referent="RBXDB3537C9A22D496EACF174E9668E2814">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>0.0941176564</R>
											<G>0.0941176564</G>
											<B>0.0941176564</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<bool name="MultiLine">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<Color3 name="PlaceholderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<string name="PlaceholderText"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">45</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX9AD9B060F0F642ADAF60C4BC69628CC2">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ZoomInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX676FE27D92E046E885DD55170FD3EA85">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">CompositeSliderInputTemplate</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXBF5DEC615F3349A1ADF50967614CD515">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="Name">TitleLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>190</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Zoom: 50%</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXAE5973DED6224033BB6969E6ADF75903">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Slider</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>145</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXBCD132E57D05439385159FBDAB29D7F0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoLocalize">true</bool>
											<Color3 name="BackgroundColor3">
												<R>0.972549081</R>
												<G>0.972549081</G>
												<B>0.972549081</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">SliderTemplate</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX8F8E4F10CF9B4ADFA4CCFD1327A66979">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">BackgroundBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXA47A8AD99FBC48869B2A984EFAC7F276">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">SliderBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="TextBox" referent="RBX8CAB1451734A45E2AD2FC12117436BC0">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>0.0941176564</R>
											<G>0.0941176564</G>
											<B>0.0941176564</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<bool name="MultiLine">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<Color3 name="PlaceholderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<string name="PlaceholderText"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">10</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX76AA93C5F90D465CA213CBCDEA632B6C">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">FieldOfViewInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>120</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX6D76A2E81047497AB0C0B9ABA0C90534">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">CompositeSliderInputTemplate</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX3F5995A1C8494546BD14CA24C15B1617">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="Name">TitleLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>190</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Field Of View: 1</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXD11501D51D104849922ADC56BDD172D6">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Slider</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>145</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX3CD7A106AE0841D6A0B2E9623199867F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoLocalize">true</bool>
											<Color3 name="BackgroundColor3">
												<R>0.972549081</R>
												<G>0.972549081</G>
												<B>0.972549081</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">SliderTemplate</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX9C719D5D5A394283ACF205FC5740962B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">BackgroundBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX4CC2BFC5E4B347B3AC90A2F85A43E5C0">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">SliderBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="TextBox" referent="RBXE164C768486B4862851F7C4289496B5E">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>0.0941176564</R>
											<G>0.0941176564</G>
											<B>0.0941176564</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<bool name="MultiLine">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<Color3 name="PlaceholderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<string name="PlaceholderText"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">5</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXFDC281ABDF42463CBB695C693E28370F">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">PitchInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX94DC52F9D59146149535A27E7BF2C500">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">CompositeSliderInputTemplate</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXD61CCA31509840B2812C040AC1C28470">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="Name">TitleLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>190</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">Pitch Rotation: 0</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX1EBE4D6A4C794AB6AC8B58522F79C928">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Slider</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>145</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX8A883AC5A4524597B6E1AD05B1E11442">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoLocalize">true</bool>
											<Color3 name="BackgroundColor3">
												<R>0.972549081</R>
												<G>0.972549081</G>
												<B>0.972549081</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0.105882362</R>
												<G>0.164705887</G>
												<B>0.207843155</B>
											</Color3>
											<int name="BorderSizePixel">1</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">SliderTemplate</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<BinaryString name="Tags"></BinaryString>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX38A46CE557894C2AA56C959D5672BF43">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">BackgroundBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXBBC3508224E841BE9F9FEA3162FA9F65">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0.5</Y>
												</Vector2>
												<bool name="AutoLocalize">true</bool>
												<Color3 name="BackgroundColor3">
													<R>1</R>
													<G>1</G>
													<B>1</B>
												</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">
													<R>0.105882362</R>
													<G>0.164705887</G>
													<B>0.207843155</B>
												</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<int name="LayoutOrder">0</int>
												<string name="Name">SliderBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0.5</YS>
													<YO>0</YO>
												</UDim2>
												<Ref name="RootLocalizationTable">null</Ref>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<BinaryString name="Tags"></BinaryString>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="TextBox" referent="RBX484FD94EC0E64705BFD822BA245C71E1">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoLocalize">true</bool>
										<Color3 name="BackgroundColor3">
											<R>0.0941176564</R>
											<G>0.0941176564</G>
											<B>0.0941176564</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<bool name="MultiLine">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<Color3 name="PlaceholderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<string name="PlaceholderText"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>24</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">5</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX593DB84471934C4CB2331832665293A8">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoButtonColor">false</bool>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="HoverImage"><null></null></Content>
							<Content name="Image"><url>rbxassetid://3118446304</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<int name="LayoutOrder">0</int>
							<bool name="Modal">false</bool>
							<string name="Name">Theme_Input</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>178</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<Content name="PressedImage"><null></null></Content>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>18</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LocalizationService" referent="RBXC0F616C593EA4C03A1B388E7926AA505">
		<Properties>
			<string name="Name">LocalizationService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX0C7D6D2B3C6945BB8F0364EA3EAF5EDE">
		<Properties>
			<string name="Name">Teleport Service</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX3E7EF74602D2482084E254D607264747">
		<Properties>
			<string name="Name">CollectionService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXAE7AC3EE762A408B95F151DA434A21B6">
		<Properties>
			<string name="Name">PhysicsService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX5C629588BD1142C6AB10188F14E37435">
		<Properties>
			<string name="Name">Geometry</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX1850F59A433445F08D23D6BD2EB9670E">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<string name="Name">InsertService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXBA44B79E33FD428C8496119F305C7D89">
		<Properties>
			<string name="Name">GamePassService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX28D6CB02236F4B3ABAB2C42A6AC21EE7">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX0F038EF256AD4FBEB8CE266A4C574D29">
		<Properties>
			<string name="Name">CookiesService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXCF202B7F89BC484BBA408684878C318F">
		<Properties>
			<string name="Name">VRService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBXDED599A438DB4ABCB6132CCD3E74D316">
		<Properties>
			<string name="Name">ContextActionService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4090E4144A3B453AAF7E803E4DD57603">
		<Properties>
			<string name="Name">Instance</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX8E5FBCFA90A940F9A4F35B1D267D2BDA">
		<Properties>
			<string name="Name">AssetService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBXE5E31C03C0F54C179F3431C65D14C9F8">
		<Properties>
			<string name="Name">TouchInputService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX23737183EC7D47BFAF8C9F07B2E7220F">
		<Properties>
			<string name="Name">Selection</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBXE801D7DAAF0D479DA1A1260E7329ADC0">
		<Properties>
			<bool name="LoadStringEnabled">true</bool>
			<string name="Name">ServerScriptService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX7060C54F31C8443EA4B380A59815D781">
		<Properties>
			<string name="Name">ServerStorage</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXD644A2E5F9D8400E92D9F5BBDE702293">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBX68DB2C55DE3F48369EDF300DFAFBAB1D">
			<Properties>
				<string name="Name">Icon Creator</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Script" referent="RBX9F99E3B5A55446649F3C38B6CF57D263">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Main</string>
					<string name="ScriptGuid">{ABE6E11C-1B51-4574-B879-FE3F4F82D14D}</string>
					<ProtectedString name="Source"><![CDATA[--[[
	
	Hello there https://www.youtube.com/watch?v=eaEMSKzqGAg
	
--]]

local VERSION = "0.0.1"
local DEBUG = false
local VERBOSE_DEBUG = false 

local toolbar = plugin:CreateToolbar("Icon Creator")
local button = toolbar:CreateButton(
	"DataBrain_Icon_Creator",
	"Tool for creating icon images of roblox models",
	"rbxassetid://3110239947",
	"Icon Creator"
)

local dependencies = require(script.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local App = require(script.Parent.containers.App)
local rootReducer = require(script.Parent.rootReducer)
local actions = require(script.Parent.actions)
local CoreGui = game:GetService("CoreGui")

-- Setup (not redux) redux store

local store = Rocrastinate.createStore(rootReducer.reducer, rootReducer.initialState)
store.applyMiddleware(Rocrastinate.SpunkMiddleware)
if VERBOSE_DEBUG then
	store.applyMiddleware(Rocrastinate.InspectorMiddleware.createInspectorMiddleware({ maxDepth = 4, }))
elseif DEBUG then
	store.applyMiddleware(Rocrastinate.LoggerMiddleware)
end

-- Mount app
local app = App.new(store, CoreGui)

-- Activate/deactivate funnel
local active = store.getState("enabled")
local function handlePluginEnable()
	active = true
	button:SetActive(true)
	store.dispatch(actions.enableApp())
end

local function handlePluginDisable()
	active = false
	button:SetActive(false)
	store.dispatch(actions.disableApp())
end

-- Plugin deactivation events
plugin.Deactivation:Connect(handlePluginDisable)
plugin.Unloading:Connect(function()
	handlePluginDisable()
	app:Destroy()
end)

-- Toolbar button event
button.Click:Connect(function()
	if active then
		handlePluginDisable()
	else
		handlePluginEnable()
	end
end)]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX681F64DB737F4969813C1C9571DBC867">
				<Properties>
					<string name="Name">components</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXDA2A379E4E4E4D40A5620F25C90A378A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BoolCheckbox</string>
						<string name="ScriptGuid">{2100AD2A-7FE0-4992-992C-0E7B86D08577}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types
local themes = require(script.Parent.Parent.themes)

local BoolCheckbox = Rocrastinate.Component:extend()

local IProps = Types.Interface {
	onClick = "function",
	checked = "boolean",
	text = "string",
	theme = Types.Optional "table",
}
function BoolCheckbox:constructor(parent, props)
	-- Props
	assert(IProps:Check(props))
	self.onClick = props.onClick
	self.checked = props.checked
	self.text = props.text
	self.theme = props.theme
	
	self.parent = parent
end

function BoolCheckbox:SetChecked(isChecked)
	self.checked = isChecked
	
	self.queueRedraw()
end

function BoolCheckbox:GetChecked(isChecked)
	return self.checked
end

function BoolCheckbox:SetText(text)
	self.text = text
	
	self.queueRedraw()
end

function BoolCheckbox:SetTheme(theme)
	self.theme = theme
	
	self.queueRedraw()
end

BoolCheckbox.RedrawBinding = "Heartbeat"
function BoolCheckbox:Redraw()
	-- Create gui
	if not self.gui then
		self.gui = self.maid:GiveTask(script.BoolCheckboxTemplate:Clone())
		
		self.maid:GiveTask(
			self.gui.MouseButton1Click:Connect(function() self.onClick(self.checked) end),
			self.gui.Checkbox.MouseButton1Click:Connect(function() self.onClick(self.checked) end)
		)
		
		self.gui.Parent = self.parent
	end
	
	-- Apply theme
	if self.renderedTheme ~= self.theme then
		self.renderedTheme = self.theme
		if not self.theme then return end
		
		themes.recolorTextLabelElements("fontItalicized", self.theme, {
			self.gui.Message
		})
		themes.recolorIconElement(self.gui.Checkbox.Checked, "checkIcon", self.theme)
	end
	
	-- Update text
	self.gui.Message.Text = self.text
	
	-- Update checked state
	self.gui.Checkbox.Checked.Visible = self.checked
	
	if self.theme then
		self.gui.Checkbox.BackgroundColor3 = self.checked
			and self.theme.checkboxSelected
			or self.theme.checkboxUnselected
	end
end

return BoolCheckbox]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="TextButton" referent="RBX9F8AB56DE1854437BDB10AF03B19B485">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>0.82745105</R>
								<G>0.937254965</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<bool name="Modal">false</bool>
							<string name="Name">BoolCheckboxTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXF617C156BE8C486CB6E105A2E526D19B">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="Name">Message</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>35</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-35</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Update with selection</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">1</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX13854B69B3034FDD9199BCBC3F43FA5B">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>0.0941176564</R>
									<G>0.0941176564</G>
									<B>0.0941176564</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<bool name="Modal">false</bool>
								<string name="Name">Checkbox</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>4</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-8</XO>
									<YS>1</YS>
									<YO>-8</YO>
								</UDim2>
								<token name="SizeConstraint">2</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX83C59CA061B6421FAF5FE0DA0C4E91E2">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://3111101141</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<int name="LayoutOrder">0</int>
									<string name="Name">Checked</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>2</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-4</XO>
										<YS>1</YS>
										<YO>-4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX4C9173B3A03445D6AA113528A4CCE951">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">CompositeSliderInput</string>
						<string name="ScriptGuid">{A0202A34-3135-48E5-A9A9-1A8CB7D1025E}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types
local NumericInputBox = require(script.Parent.Parent.decorators.NumericInputBox)
local Slider = require(script.Parent.Parent.components.Slider)
local ConstrainSliderValue = require(script.Parent.Parent.Util.ConstrainSliderValue)
local themes = require(script.Parent.Parent.themes)

local CompositeSliderInput = Rocrastinate.Component:extend()

local IProps = Types.Interface {
	theme = Types.Optional "table",
	onUserInputValue = "function",
	onUserInputIncrement = "function",
	minValue = "number",
	maxValue = "number",
	quantizationBasis = Types.Optional "number",
	defaultValue = "number",
	defaultIncrement = "number",
	defaultText = Types.Optional "string",
}
function CompositeSliderInput:constructor(parent, props)
	-- Props
	assert(IProps:Check(props))
	self.theme = props.theme
	self.quantizationBasis = props.quantizationBasis or 0
	self.minValue = props.minValue
	self.maxValue = props.maxValue
	self.onUserInputValue = props.onUserInputValue
	self.onUserInputIncrement = props.onUserInputIncrement
	self.text = props.defaultText or ""
	
	-- State
	self.parent = parent
	self.quantization = props.defaultIncrement
	self.value = ConstrainSliderValue(props.defaultValue, self.quantization, self.quantizationBasis, self.minValue, self.maxValue)
end

CompositeSliderInput.RedrawBinding = "Heartbeat"
function CompositeSliderInput:Redraw()
	-- Create gui
	if not self.gui then
		self.gui = self.maid:GiveTask(
			script.CompositeSliderInputTemplate:Clone()
		)
		
		self.slider = self.maid:GiveTask(
			Slider.new(self.gui.Slider, {
				theme = self.theme,
				minValue = self.minValue,
				maxValue = self.maxValue,
				quantizationBasis = self.quantizationBasis,
				onUserInput = function(value)
					self.onUserInputValue(value)
				end,
				defaultValue = self.value,
				defaultIncrement = self.quantization,
			})
		)
		self.incrementInputBox = self.maid:GiveTask(
			NumericInputBox.new(self.gui.Increment, {
				theme = self.theme,
				minValue = 0,
				maxValue = self.maxValue,
				significantDigits = 1,
				defaultValue = self.value,
				focusLostInputFilter = function(enterPressed, input)
					return input.KeyCode ~= Enum.KeyCode.Escape
				end,
				onUserInput = function(value)
					self.onUserInputIncrement(value)
				end,
			})
		)
		
		self.gui.Parent = self.parent
	end
	
	-- Propogate values
	self.slider:SetValue(self.value)
	self.slider:SetIncrement(self.quantization)
	self.incrementInputBox:SetValue(self.quantization, false)
	self.gui.TitleLabel.Text = self.text
	
	if self.renderedTheme ~= self.theme then
		self.renderedTheme = self.theme
		
		-- Text input
		themes.recolorTextBoxElements(self.theme, {
			self.gui.Increment,
		})
		
		-- Text 
		themes.recolorTextLabelElements("fontDefault", self.theme, {
			self.gui.TitleLabel,
		})
	end
end

function CompositeSliderInput:SetTheme(theme)
	self.theme = theme
	
	if self.gui then
		self.slider:SetTheme(self.theme)
	end
	
	self.queueRedraw()
end

function CompositeSliderInput:SetIncrement(value)
	self.quantization = value

	self.queueRedraw()
end

function CompositeSliderInput:SetValue(value)
	self.value = value
	
	self.queueRedraw()
end

function CompositeSliderInput:SetText(text)
	self.text = text
end

return CompositeSliderInput]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Frame" referent="RBXD02A3B70E8AA46D2A1D33A07A041723D">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">CompositeSliderInputTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX7D9B598BA1DB4F4991235CC0BED83B71">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="Name">TitleLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>190</XO>
									<YS>0</YS>
									<YO>24</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Zoom: 50%</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX40B24678B9D5453591ADC7C147D275AA">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Slider</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>24</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>145</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX2B5CF76921F74E6AB63232D732DCCD8E">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>0.0941176564</R>
									<G>0.0941176564</G>
									<B>0.0941176564</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<bool name="MultiLine">false</bool>
								<string name="Name">Increment</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<Color3 name="PlaceholderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<string name="PlaceholderText"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>155</XO>
									<YS>0</YS>
									<YO>24</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>45</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">10</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX0797854A4B84472EA903F1C1D260D51C">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Slider</string>
						<string name="ScriptGuid">{B9AC4F91-DB6C-4C13-A5DE-3ABBC306429A}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types
local NumericInputBox = require(script.Parent.Parent.decorators.NumericInputBox)
local DragInput = require(script.Parent.Parent.decorators.DragInput)
local ConstrainSliderValue = require(script.Parent.Parent.Util.ConstrainSliderValue)
local themes = require(script.Parent.Parent.themes)

local function mapValue(value, a, b, c, d)
	return c + (d - c) * math.clamp((value - a) / (b - a), 0, 1)
end

local Slider = Rocrastinate.Component:extend()

local IProps = Types.Interface {
	theme = Types.Optional "table",
	onUserInput = "function",
	minValue = "number",
	maxValue = "number",
	quantizationBasis = Types.Optional "number",
	defaultValue = "number",
	defaultIncrement = "number",
}
function Slider:constructor(parent, props)
	-- Props
	assert(IProps:Check(props))
	self.theme = props.theme
	self.quantization = props.defaultIncrement
	self.quantizationBasis = props.quantizationBasis or 0
	self.minValue = props.minValue
	self.maxValue = props.maxValue
	self.onUserInput = props.onUserInput
	
	-- State
	self.parent = parent
	self.value = props.defaultValue
end

Slider.RedrawBinding = "Heartbeat"
function Slider:Redraw()
	-- Create gui
	if not self.gui then
		self.gui = self.maid:GiveTask(
			script.SliderTemplate:Clone()
		)
		
		-- Drag input
		local function updateDrag(x)
			local newValue = mapValue(
				x,
				self.gui.AbsolutePosition.X, self.gui.AbsolutePosition.X + self.gui.AbsoluteSize.X,
				self.minValue, self.maxValue
			)
			newValue = ConstrainSliderValue(newValue, self.quantization, self.quantizationBasis, self.minValue, self.maxValue)
			
			if newValue ~= self.value then
				self.onUserInput(newValue)
			end
		end
		self.maid:GiveTask(
			DragInput.new(self.gui, {
				began = updateDrag,
				moved = updateDrag,
				ended = updateDrag,
			})
		)
		
		self.gui.Parent = self.parent
	end
	
	-- Apply theme
	if self.renderedTheme ~= self.theme then
		self.renderedTheme = self.theme
		if not self.theme then return end
		
		themes.recolorSliderElements(self.theme, {
			self.gui.BackgroundBar,
			self.gui.SliderBar
		})
	end
	
	local valueNormalized = mapValue(
		self.value,
		self.minValue, self.maxValue,
		0, 1
	)
	
	-- Position slider bar
	self.gui.SliderBar.Position = UDim2.new(
		valueNormalized, 0,
		0.5, 0
	)
end

function Slider:SetTheme(theme)
	self.theme = theme
	
	self.queueRedraw()
end

function Slider:SetIncrement(value)
	self.quantization = value
	
	self.value = ConstrainSliderValue(self.value, value, self.quantizationBasis, self.minValue, self.maxValue)

	self.queueRedraw()
end

function Slider:SetValue(value)
	self.value = value
	
	self.queueRedraw()
end

return Slider]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Frame" referent="RBXA3D6EE0AB8DA4D82A1F2ED9C6B8E142A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>0.972549081</R>
								<G>0.972549081</G>
								<B>0.972549081</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">SliderTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBXC5722F85BA4B4C12ACB96B00C9FDC910">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0.5</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">BackgroundBar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>4</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXE65FA0F2C67F4B66B028BB948CD7CABA">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">SliderBar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>4</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXFEB2E9CC18A6457F8AA55DAC2E4DCDFB">
				<Properties>
					<string name="Name">containers</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX28FDC804EBFD4BFC8D419E85267AF616">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">App</string>
						<string name="ScriptGuid">{542FFC3E-4CF6-46B1-B9C5-DD4CD47687D6}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local SelectionTracker = require(script.Parent.Parent.io.SelectionTracker)
local PluginWindow = require(script.Parent.Parent.containers.PluginWindow)

local App = Rocrastinate.Component:extend()

function App:constructor(store, parent)
	self.store = store
	self.parent = parent
	
	self.skippedEnabledFrame = false
end

App.Reduction = {
	enabled = "enabled",
}
App.RedrawBinding = "Heartbeat"
function App:Redraw(reducedState)
	-- Create gui only when enabled, but do not destoy upon disabling
	if not self.gui and reducedState.enabled then
		self.gui = self.maid:GiveTask(
			script.AppTemplate:Clone()
		)
		
		local widgetContainer = self.gui
		self.maid:GiveTask(
			PluginWindow.new(self.store, widgetContainer)
		)
		
		self.gui.Parent = self.parent
	end

	-- Render gui after a single skipped frame
	if self.gui then
		self.gui.Enabled = reducedState.enabled
	end
	
	-- Create/destroy selection tracker based on enabled state
	local selectionTracker = self.selectionTracker
	if selectionTracker then
		if not reducedState.enabled then
			self.selectionTracker = nil
			selectionTracker:Destroy()
		end
	else
		if reducedState.enabled then
			selectionTracker = SelectionTracker.new(self.store)
			self.selectionTracker = selectionTracker
		end
	end
end

return App]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ScreenGui" referent="RBX849633F9AE4E48D1BF9633FAF2A8DE2A">
						<Properties>
							<bool name="AutoLocalize">true</bool>
							<int name="DisplayOrder">0</int>
							<bool name="Enabled">true</bool>
							<bool name="IgnoreGuiInset">false</bool>
							<string name="Name">AppTemplate</string>
							<bool name="ResetOnSpawn">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<BinaryString name="Tags"></BinaryString>
							<token name="ZIndexBehavior">1</token>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXF819B4F515B14FD6BDBF235321ADF7FC">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">IconViewport</string>
						<string name="ScriptGuid">{60EE93D3-F4C2-4CF6-9731-C3921A434DEB}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate

local IconViewport = Rocrastinate.Component:extend()

function IconViewport:constructor(state, parent)
	self.parent = parent
	
	-- State
	self.lastRenderedTemplate = nil
	self.activeModel = nil
end

IconViewport.Reduction = {
	width = "viewport.width",
	height = "viewport.height",
	template = 'viewport.template',
	backgroundColor = 'viewport.backgroundColor',
	
	yaw = "viewportCamera.sliders.yaw.value",
	pitch = "viewportCamera.sliders.pitch.value",
	fieldOfView = "viewportCamera.sliders.fieldOfView.value",
	zoom = "viewportCamera.sliders.zoom.value",
}
IconViewport.RedrawBinding = "RenderStep"
function IconViewport:Redraw(reducedState)
	if not self.gui then
		self.gui = self.maid:GiveTask(script.IconViewportTemplate:Clone())
		
		self.gui.Parent = self.parent
	end
	
	-- Resize viewport
	self.gui.Size = UDim2.new(
		0, reducedState.width,
		0, reducedState.height
	)
	
	-- Recolor
	self.gui.BackgroundColor3 = reducedState.backgroundColor
	
	-- Redraw model if the template has changed
	if self.lastRenderedTemplate ~= reducedState.template then
		self.lastRenderedTemplate = reducedState.template
		
		-- Clear old model
		if self.activeModel then
			self.activeModel:Destroy()
			self.activeModel = nil
		end
		
		-- Create new model
		self.activeModel = self.maid:GiveTask(Instance.new("Model"))
		self.activeModel.Archivable = false
		
		-- Populate with clone of selection
		for i = 1, #reducedState.template do
			local root = reducedState.template[i]
			if root:IsA("Model") or root:IsA("BasePart") or root:IsA("Folder") then
				local success, clone = pcall(root.Clone, root)
				if success then
					if not clone then
						root.Archivable = true
						clone = root:Clone()
						root.Archivable = false
					end
					clone.Parent = self.activeModel
				end
			end
		end
		
		-- Get a part's position
		local firstPosition
		local descendants = self.activeModel:GetDescendants()
		for i = 1, #descendants do
			if descendants[i]:IsA("BasePart") then
				firstPosition = descendants[i].Position
				break
			end
		end
		
		-- Add an invisible PrimaryPart aligned to the base CFrame
		local primaryPart = Instance.new("Part")
		primaryPart.CFrame = CFrame.new(firstPosition or Vector3.new())
		primaryPart.Size = Vector3.new(0.05, 0.05, 0.05)
		primaryPart.Transparency = 1
		primaryPart.Parent = self.activeModel
		self.activeModel.PrimaryPart = primaryPart
		
		self.activeModel.Parent = self.gui
	end
	
	local cframe, size = self.activeModel:GetBoundingBox()

	-- Orient camera
	local camera = self.gui.Camera
	self.gui.CurrentCamera = camera
	camera.FieldOfView = reducedState.fieldOfView
	local baseRotatedCF = cframe
		* CFrame.Angles(0, math.rad(reducedState.yaw), 0)
		* CFrame.Angles(math.rad(reducedState.pitch), 0, 0)
	
	-- Find model scale
	local modelScale = size.Magnitude
	local zoomDistance = modelScale / (2 * math.tan(math.rad(reducedState.fieldOfView / 2))) -- I almost used the mobile game 'euclidea' to solve this
	local zoomOffsetCF = CFrame.new(0, 0, zoomDistance / (reducedState.zoom / 100))
	
	-- Shift to center
--	camera.CFrame = baseRotatedCF
--		* zoomOffsetCF
--	local vertices = {
--		cframe.p + size / 2,
--		cframe.p + Vector3.new(size.X, size.Y, -size.Z) / 2,
--		cframe.p + Vector3.new(size.X, -size.Y, size.Z) / 2,
--		cframe.p + Vector3.new(size.X, -size.Y, -size.Z) / 2,
--		cframe.p + Vector3.new(-size.X, size.Y, size.Z) / 2,
--		cframe.p + Vector3.new(-size.X, size.Y, -size.Z) / 2,
--		cframe.p + Vector3.new(-size.X, -size.Y, size.Z) / 2,
--		cframe.p - size / 2,
--	}
--	local minXRel, maxXRel, minYRel, maxYRel = math.huge, -math.huge, math.huge, -math.huge
--	for i = 1, #vertices do
--		local relPos = camera:WorldToViewportPoint(vertices[i])
--		if relPos.X < minXRel then
--			minXRel = relPos.X
--		end
--		if relPos.Y < minYRel then
--			minYRel = relPos.Y
--		end
--		if relPos.X > maxXRel then
--			maxXRel = relPos.X
--		end
--		if relPos.Y > maxYRel then
--			maxYRel = relPos.Y
--		end
--	end
--	local centerOffsetX = (maxXRel + minXRel) / 2 - camera.ViewportSize.X / 2
--	local centerOffsetY = (maxYRel + minYRel) / 2 - camera.ViewportSize.Y / 2
--	local centerOffsetCF = CFrame.new(
--		- baseRotatedCF.UpVector * centerOffsetY * zoomOffsetCF.Z
--		+ baseRotatedCF.RightVector * centerOffsetX * zoomOffsetCF.Z
--	)
	
	-- Compose final camera placement
	camera.CFrame = baseRotatedCF
		* zoomOffsetCF-- * centerOffsetCF
end

return IconViewport]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ViewportFrame" referent="RBX04AFF6B7DCE04882B321C7A98C371D28">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>0.0980392247</R>
								<G>1</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">0</int>
							<CoordinateFrame name="CameraCFrame">
								<X>0</X>
								<Y>5</Y>
								<Z>2</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="CameraFieldOfView">1.22173059</float>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="ImageTransparency">0</float>
							<int name="LayoutOrder">0</int>
							<string name="Name">IconViewportTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>256</XO>
								<YS>0</YS>
								<YO>256</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Camera" referent="RBXF40A3C1152AA4BFB95988D0702B0C03D">
							<Properties>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>5</Y>
									<Z>2</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<Ref name="CameraSubject">null</Ref>
								<token name="CameraType">0</token>
								<float name="FieldOfView">70</float>
								<CoordinateFrame name="Focus">
									<X>0</X>
									<Y>0</Y>
									<Z>-5</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="HeadLocked">true</bool>
								<float name="HeadScale">1</float>
								<string name="Name">Camera</string>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXC65F654B1F884E4C9CEBAFD208B59C48">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PluginWindow</string>
						<string name="ScriptGuid">{5E1DF688-77C5-4F98-B6C4-0F2D10D1C574}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local IconViewport = require(script.Parent.Parent.containers.IconViewport)
local PropertiesPanel = require(script.Parent.Parent.containers.PropertiesPanel)
local Draggable = require(script.Parent.Parent.decorators.Draggable)
local AutoResizeAroundChildren = require(script.Parent.Parent.decorators.AutoResizeAroundChildren)

local PluginWindow = Rocrastinate.Component:extend()

function PluginWindow:constructor(store, parent)
	self.store = store
	self.parent = parent
end

PluginWindow.Reduction = {
	theme = "theme",
}
PluginWindow.RedrawBinding = "Heartbeat"
function PluginWindow:Redraw(reducedState)
	if not self.gui then
		self.gui = self.maid:GiveTask(script.PluginWindowTemplate:Clone())
		
		local widgetContainer = self.gui
		self.maid:GiveTask(
			IconViewport.new(self.store, widgetContainer),
			PropertiesPanel.new(self.store, widgetContainer)
		)
		
		-- Apply decorators
		self.maid:GiveTask(
			Draggable.new(self.gui, {
				allowOffscreen = false,
			}),
			AutoResizeAroundChildren.new(self.gui, {
				padding = 5,
			})
		)
		
		self.gui.Parent = self.parent
	end
	
	-- Apply theme
	if self.renderedTheme ~= reducedState.theme then
		self.renderedTheme = reducedState.theme
		
		self.gui.ImageColor3 = reducedState.theme.primaryBackgroundColor
	end
end

return PluginWindow]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ImageLabel" referent="RBXD2E8BC0FA70846BCB0394CB3B93C7110">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://3110239646</url></Content>
							<Color3 name="ImageColor3">
								<R>0.211764723</R>
								<G>0.211764723</G>
								<B>0.211764723</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<int name="LayoutOrder">0</int>
							<string name="Name">PluginWindowTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>300</XO>
								<YS>0</YS>
								<YO>200</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">1</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>466</XO>
								<YS>0</YS>
								<YO>266</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>7</X>
									<Y>7</Y>
								</min>
								<max>
									<X>7</X>
									<Y>7</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXD63716848FAF45AD914071ABB3EAFED0">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PropertiesPanel</string>
						<string name="ScriptGuid">{CCD88C9C-078B-463B-89BC-BF684AF2EDF5}</string>
						<ProtectedString name="Source"><![CDATA[local PADDING = 5
local X_SIZE_OFFSET = script.PropertiesPanelTemplate.Size.X.Offset
local Y_SIZE_OFFSET_MIN = script.PropertiesPanelTemplate.Size.Y.Offset
local TOPBAR_OFFSET = game:GetService("RunService"):IsServer()
	and 0
	or 36
	
local function getMaxViewportSize()
	local guiSpaceSize = Vector2.new(
		workspace.CurrentCamera.ViewportSize.X,
		workspace.CurrentCamera.ViewportSize.Y - TOPBAR_OFFSET
	)
	return guiSpaceSize.X - PADDING * 2 - X_SIZE_OFFSET,
		guiSpaceSize.Y - PADDING * 2
end

local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local actions = require(script.Parent.Parent.actions)
local themes = require(script.Parent.Parent.themes)
local BoolCheckbox = require(script.Parent.Parent.components.BoolCheckbox)
local NumericInputBox = require(script.Parent.Parent.decorators.NumericInputBox)
local RatioInputBox = require(script.Parent.Parent.decorators.RatioInputBox)
local CompositeSliderInput = require(script.Parent.Parent.components.CompositeSliderInput)

local function roundAndTruncate(sigFigs, num)
	local roundedValueStr = string.format("%0." .. sigFigs .. "f", num)
	
	-- Truncate decimal zeroes
	if roundedValueStr:find("%.") then
		local truncatedEnd = #roundedValueStr
		for i = #roundedValueStr, 1, -1 do
			if roundedValueStr:byte(i) == string.byte('0') then
				truncatedEnd = truncatedEnd - 1
			elseif roundedValueStr:byte(i) == string.byte('.') then
				truncatedEnd = truncatedEnd - 1
				break
			else
				break
			end
		end
		roundedValueStr = roundedValueStr:sub(1, truncatedEnd)
	end
	
	return roundedValueStr
end

local PropertiesPanel = Rocrastinate.Component:extend()

function PropertiesPanel:constructor(store, parent)
	self.store = store
	self.parent = parent
end

PropertiesPanel.Reduction = {
	theme = "theme",
	selectingTemplate = "viewport.selectingTemplate",
	width = "viewport.width",
	height = "viewport.height",
	aspectRatio = "viewport.aspectRatio",
	aspectRatioLocked = "viewport.aspectRatioLocked",
	
	yaw = "viewportCamera.sliders.yaw",
	pitch = "viewportCamera.sliders.pitch",
	fieldOfView = "viewportCamera.sliders.fieldOfView",
	zoom = "viewportCamera.sliders.zoom",
}
PropertiesPanel.RedrawBinding = "RenderStep"
function PropertiesPanel:Redraw(reducedState)
	local maxViewportX, maxViewportY = getMaxViewportSize()
	
	if not self.gui then
		self.gui = self.maid:GiveTask(script.PropertiesPanelTemplate:Clone())
		
		-- Viewport properties
		self.selectingAssetButton = self.maid:GiveTask(
			BoolCheckbox.new(self.gui.ViewportProperties.SelectingAsset_Input, {
				onClick = function(isChecked)
					self.store.dispatch(actions.toggleTemplateSelectionEnabled())
				end,
				checked = reducedState.selectingTemplate,
				text = "Selecting Model"
			})
		)
		self.widthInputBox = self.maid:GiveTask(
			NumericInputBox.new(self.gui.ViewportProperties.X_Input, {
				minValue = 0,
				maxValue = maxViewportX,
				significantDigits = 0,
				defaultValue = reducedState.width,
				focusLostInputFilter = function(enterPressed, input)
					return input.KeyCode ~= Enum.KeyCode.Escape
				end,
				onUserInput = function(value)
					self.store.dispatch(actions.resizeViewportInput(actions.ViewportResizeFactors.WIDTH, value))
				end,
			})
		)
		self.heightInputBox = self.maid:GiveTask(
			NumericInputBox.new(self.gui.ViewportProperties.Y_Input, {
				minValue = 0,
				maxValue = maxViewportY,
				significantDigits = 0,
				defaultValue = reducedState.height,
				focusLostInputFilter = function(enterPressed, input)
					return input.KeyCode ~= Enum.KeyCode.Escape
				end,
				onUserInput = function(value)
					self.store.dispatch(actions.resizeViewportInput(actions.ViewportResizeFactors.HEIGHT, value))
				end,
			})
		)
		self.aspectRatioInputBox = self.maid:GiveTask(
			RatioInputBox.new(self.gui.ViewportProperties.AspectRatio_Input, {
				defaultValues = { reducedState.width, reducedState.height },
				focusLostInputFilter = function(enterPressed, input)
					return input.KeyCode ~= Enum.KeyCode.Escape
				end,
				onUserInput = function(x, y)
					self.store.dispatch(actions.resizeViewportInput(actions.ViewportResizeFactors.ASPECT_RATIO, { x = x, y = y }))
				end,
			})
		)
		self.maid:GiveTask(
			self.gui.ViewportProperties.AspectRatio_Locked.MouseButton1Click:Connect(function()
				self.store.dispatch(actions.toggleAspectRatioLocked())
			end),
			self.gui.Theme_Input.MouseButton1Click:Connect(function()
				self.store.dispatch(actions.nextTheme())
			end)
		)
		
		-- Camera sliders
		self.compositesInputs = {}
		local function mapCompositeInput(sliderIndex, sliderType, gui)
			local sliderSettings = reducedState[sliderIndex]
			
			self.compositesInputs[sliderIndex] = self.maid:GiveTask(
				CompositeSliderInput.new(gui, {
					onUserInputValue = function(value)
						self.store.dispatch(actions.setViewportCameraSliderValue(sliderType, value))
					end,
					onUserInputIncrement = function(value)
						self.store.dispatch(actions.setViewportCameraSliderIncrement(sliderType, value))
					end,
					minValue = sliderSettings.minValue,
					maxValue = sliderSettings.maxValue,
					quantizationBasis = sliderSettings.quantizationBasis,
					defaultValue = sliderSettings.value,
					defaultIncrement = sliderSettings.increment,
				})
			)
		end
		mapCompositeInput("yaw", actions.ViewportCameraSliders.YAW, self.gui.CameraSliders.YawInput)
		mapCompositeInput("pitch", actions.ViewportCameraSliders.PITCH, self.gui.CameraSliders.PitchInput)
		mapCompositeInput("fieldOfView", actions.ViewportCameraSliders.FIELD_OF_VIEW, self.gui.CameraSliders.FieldOfViewInput)
		mapCompositeInput("zoom", actions.ViewportCameraSliders.ZOOM, self.gui.CameraSliders.ZoomInput)
		
		self.gui.Parent = self.parent
	end
	
	-- Propogate viewport properties
	self.selectingAssetButton:SetChecked(reducedState.selectingTemplate)
	self.widthInputBox:SetValue(reducedState.width, false)
	self.widthInputBox:SetExtremeValues(0, maxViewportX)
	self.heightInputBox:SetValue(reducedState.height, false)
	self.heightInputBox:SetExtremeValues(0, maxViewportY)
	self.aspectRatioInputBox:SetValues(reducedState.aspectRatio.x, reducedState.aspectRatio.y, false)
	
	if reducedState.aspectRatioLocked then
		themes.recolorIconElement(
			self.gui.ViewportProperties.AspectRatio_Locked,
			"lockIcon",
			reducedState.theme
		)
	else
		themes.recolorIconElement(
			self.gui.ViewportProperties.AspectRatio_Locked,
			"unlockIcon",
			reducedState.theme
		)
	end
	
	-- Propogate camera slider properties
	self.compositesInputs.yaw:SetValue(reducedState.yaw.value)
	self.compositesInputs.yaw:SetIncrement(reducedState.yaw.increment)
	self.compositesInputs.yaw:SetText("Yaw Rotation: " .. roundAndTruncate(1, reducedState.yaw.value) .. "°")
	
	self.compositesInputs.pitch:SetValue(reducedState.pitch.value)
	self.compositesInputs.pitch:SetIncrement(reducedState.pitch.increment)
	self.compositesInputs.pitch:SetText("Pitch Rotation: " .. roundAndTruncate(1, reducedState.pitch.value) .. "°")
	
	self.compositesInputs.fieldOfView:SetValue(reducedState.fieldOfView.value)
	self.compositesInputs.fieldOfView:SetIncrement(reducedState.fieldOfView.increment)
	self.compositesInputs.fieldOfView:SetText("Field Of View: " .. roundAndTruncate(0, reducedState.fieldOfView.value) .. "°")
	
	self.compositesInputs.zoom:SetValue(reducedState.zoom.value)
	self.compositesInputs.zoom:SetIncrement(reducedState.zoom.increment)
	self.compositesInputs.zoom:SetText("Zoom: " .. roundAndTruncate(0, reducedState.zoom.value) .. "%")
	
	-- Apply theme
	if self.renderedTheme ~= reducedState.theme then
		self.renderedTheme = reducedState.theme
		
		-- Text input
		themes.recolorTextBoxElements(reducedState.theme, {
			self.gui.ViewportProperties.X_Input,
			self.gui.ViewportProperties.Y_Input,
			self.gui.ViewportProperties.AspectRatio_Input,
		})
		
		-- Text 
		themes.recolorTextLabelElements("fontBold", reducedState.theme, {
			self.gui.Title,
		})
		themes.recolorTextLabelElements("fontDefault", reducedState.theme, {
			self.gui.ViewportProperties.X_Label,
			self.gui.ViewportProperties.Y_Label,
			self.gui.ViewportProperties.AspectRatio_Label,
		})
		
		-- Propogate component theme changes
		self.selectingAssetButton:SetTheme(reducedState.theme)
		for _, composite in pairs(self.compositesInputs) do
			composite:SetTheme(reducedState.theme)
		end
		
		-- Icons
		themes.recolorIconElement(self.gui.Theme_Input, 'themeIcon', reducedState.theme)
	end
	
	-- Reposition and resize
	self.gui.Position = UDim2.new(
		0,
		reducedState.width + PADDING,
		0,
		PADDING
	)
	self.gui.Size = UDim2.new(
		0,
		X_SIZE_OFFSET,
		0,
		math.max(Y_SIZE_OFFSET_MIN, reducedState.height)
	)
end

return PropertiesPanel]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Frame" referent="RBX3F2BAD663805423089299D3C46A46E9A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoLocalize">true</bool>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0.105882362</R>
								<G>0.164705887</G>
								<B>0.207843155</B>
							</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">PropertiesPanelTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>261</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>280</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX06D8ABF1EE9D458583F3EFF0F9AA87F1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="Name">Title</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Icon Creator</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX83A7C5A5EC4D414FA44923603142EC0C">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ViewportProperties</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX3AE30E17584B44529522040175E6F2B6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">4</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="Name">X_Label</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">X</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBXC60F51F5B8B64C9A9274FD546DF583FA">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">4</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="Name">Y_Label</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Y</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX98AE9DF66EE649D1849250DFC72D7016">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">4</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="Name">AspectRatio_Label</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Aspect Ratio</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="ImageButton" referent="RBX521C61C56790426B88F17B320BA2450C">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">false</bool>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="HoverImage"><null></null></Content>
									<Content name="Image"><url>rbxassetid://3110238916</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<int name="LayoutOrder">0</int>
									<bool name="Modal">false</bool>
									<string name="Name">AspectRatio_Locked</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>178</XO>
										<YS>0</YS>
										<YO>66</YO>
									</UDim2>
									<Content name="PressedImage"><null></null></Content>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>18</XO>
										<YS>0</YS>
										<YO>18</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX681E77512D194F42B3F9024639BAB7B3">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>0.0941176564</R>
										<G>0.0941176564</G>
										<B>0.0941176564</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<bool name="MultiLine">false</bool>
									<string name="Name">Y_Input</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<Color3 name="PlaceholderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<string name="PlaceholderText"></string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>130</XO>
										<YS>0</YS>
										<YO>34</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<bool name="ShowNativeInput">true</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>22</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">256</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX927CB1F0169D4AABB4D86081ED09F89E">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>0.0941176564</R>
										<G>0.0941176564</G>
										<B>0.0941176564</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<bool name="MultiLine">false</bool>
									<string name="Name">AspectRatio_Input</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<Color3 name="PlaceholderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<string name="PlaceholderText"></string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>64</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<bool name="ShowNativeInput">true</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>22</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">1:1</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBXE923853837AA4703B0105E35DE826403">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>0.0941176564</R>
										<G>0.0941176564</G>
										<B>0.0941176564</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<bool name="MultiLine">false</bool>
									<string name="Name">X_Input</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<Color3 name="PlaceholderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<string name="PlaceholderText"></string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>34</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<bool name="ShowNativeInput">true</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>22</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">256</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX84922EE9C5A645E1B71894826D3A3B5A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">SelectingAsset_Input</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>195</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXBD6308E5D1A548F697B4C15BFC91C592">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">CameraSliders</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>120</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>160</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXD871A514D75B43688E9DEB1656284200">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">YawInput</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>200</XO>
										<YS>0</YS>
										<YO>40</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBXBE16A9E75DB34B7284114B4F891EC4E7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ZoomInput</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>80</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>200</XO>
										<YS>0</YS>
										<YO>40</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBXA04BF2AC1F5943568F574E4C41D18348">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">FieldOfViewInput</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>200</XO>
										<YS>0</YS>
										<YO>40</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBXC8701D430BF34786807872B9A079BDCD">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoLocalize">true</bool>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0.105882362</R>
										<G>0.164705887</G>
										<B>0.207843155</B>
									</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">PitchInput</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>40</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>200</XO>
										<YS>0</YS>
										<YO>40</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="ImageButton" referent="RBX52A70D7C5DDA423AA24F43223EA4CBE8">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">false</bool>
								<bool name="AutoLocalize">true</bool>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0.105882362</R>
									<G>0.164705887</G>
									<B>0.207843155</B>
								</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://3118446304</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">Theme_Input</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>178</XO>
									<YS>0</YS>
									<YO>5</YO>
								</UDim2>
								<Content name="PressedImage"><null></null></Content>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>18</XO>
									<YS>0</YS>
									<YO>18</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX261E334C650C42A0AD1B51A2747ED94F">
				<Properties>
					<string name="Name">decorators</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXEAF7913A1F2E42689D43B079D245EE72">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Draggable</string>
						<string name="ScriptGuid">{C93B63A5-9E41-43A6-8C49-9A4CF36F2034}</string>
						<ProtectedString name="Source"><![CDATA[local TOPBAR_OFFSET = game:GetService("RunService"):IsServer()
	and 0
	or 36

local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types
local DragInput = require(script.Parent.Parent.decorators.DragInput)

local function getGuiObjectBounds(absolutePosition, absoluteSize)
	return absolutePosition,
		absolutePosition + absoluteSize
end

local function absolutePositionToPosition(absolutePosition, absoluteSize, anchorPoint)
	return UDim2.new(
		0, absolutePosition.X + absoluteSize.X * anchorPoint.X,
		0, absolutePosition.Y + absoluteSize.Y * anchorPoint.Y
	)
end

local Draggable = Rocrastinate.Component:extend()

local IProps = Types.Interface {
	positionChanged = Types.Optional "function",
	allowOffscreen = "boolean",
}
function Draggable:constructor(object, props)
	-- State
	self.gui = object
	self.originAbsolutePosition = Vector2.new(object.Position.X.Offset, object.Position.Y.Offset)
	self.dragOffset = Vector2.new()
	self.dragging = false
	
	-- Props
	assert(IProps:Check(props))
	self.positionChanged = props.positionChanged
	self.allowOffscreen = props.allowOffscreen
	
	self.maid:GiveTask(
		DragInput.new(object, {
			began = function()
				self.originAbsolutePosition = object.AbsolutePosition
				self.dragOffset = Vector2.new()
			end,
			moved = function(_, _, dx, dy)
				self.dragOffset = self.dragOffset + Vector2.new( dx, dy )
				
				self.queueRedraw()
			end,
			ended = function()
				self.originAbsolutePosition = self.originAbsolutePosition + self.dragOffset
				self.dragOffset = Vector2.new()
			end,
		})
	)
	
	-- Re-clamp on AbsoluteSize change
	self.maid:GiveTask(
		object:GetPropertyChangedSignal('AbsoluteSize'):Connect(self.queueRedraw)
	)
end

Draggable.RedrawBinding = "RenderStep"
function Draggable:Redraw()
	local targetAbsolutePosition = self.originAbsolutePosition + self.dragOffset
	
	-- Push away from offscreen boundaries
	local newAbsolutePosition = targetAbsolutePosition
	if not self.allowOffscreen then
		local guiSpaceSize = Vector2.new(
			workspace.CurrentCamera.ViewportSize.X,
			workspace.CurrentCamera.ViewportSize.Y - TOPBAR_OFFSET
		)
		local tlCorner, brCorner = getGuiObjectBounds(newAbsolutePosition, self.gui.AbsoluteSize)
		
		local minX, minY = 0, 0
		local maxX, maxY = guiSpaceSize.X, guiSpaceSize.Y
		if self.gui.AbsoluteSize.X > guiSpaceSize.X then
			local delta = self.gui.AbsoluteSize.X - guiSpaceSize.X
			minX = minX - delta
			maxX = maxX + delta
		end
		if self.gui.AbsoluteSize.Y > guiSpaceSize.Y then
			local delta = self.gui.AbsoluteSize.Y - guiSpaceSize.Y
			minY = minY - delta
			maxY = maxY + delta
		end
		
		if brCorner.X > maxX then
			newAbsolutePosition = newAbsolutePosition + Vector2.new(maxX - brCorner.X, 0)
		end
		if brCorner.Y > maxY then
			newAbsolutePosition = newAbsolutePosition + Vector2.new(0, maxY - brCorner.Y)
		end
		if tlCorner.X < minX then
			newAbsolutePosition = newAbsolutePosition + Vector2.new(minX - tlCorner.X, 0)
		end
		if tlCorner.Y < minY then
			newAbsolutePosition = newAbsolutePosition + Vector2.new(0, minY - tlCorner.Y)
		end
	end
	
	-- Move gui
	self.gui.Position = absolutePositionToPosition(newAbsolutePosition, self.gui.AbsoluteSize, self.gui.AnchorPoint)
	
	if self.positionChanged then
		self.positionChanged(newAbsolutePosition.X, newAbsolutePosition.Y)
	end
end

return Draggable]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXB87C28FA06504C89B6DBA852A98D677F">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AutoResizingScrollingFrame</string>
						<string name="ScriptGuid">{148E854E-F6BC-4B63-A36A-A9ED1561EDF9}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local actions = require(script.Parent.Parent.actions)

local AutoResizingScrollingFrame = Rocrastinate.Component:extend()

local propsInterface = {
	scrollingDirection = "EnumItem",
}
	
function AutoResizingScrollingFrame:constructor(scrollingFrame, props)
	-- State
	self.gui = scrollingFrame
	
	-- Props
	assert(typeof(props) == "table", "Invalid props")
	for k, v in pairs(propsInterface) do
		assert(typeof(props[k]) == v, "Invalid props")
	end
	self.scrollingDirection = props.scrollingDirection
	
	
	-- Queue redraw when a child is added, removed, or has its AbsolutePosition/AbsoluteSize changed
	local childSignalDestructors = {}
	local function removeChild(child)
		local destructor = childSignalDestructors[child]
		if destructor then
			self.maid:Cleanup(destructor)
		end
		
		self.queueRedraw()
	end
	local function handleChild(child)
		if child:IsA("GuiObject") then
			local p = child:GetPropertyChangedSignal("AbsolutePosition"):Connect(self.queueRedraw)
			local s = child:GetPropertyChangedSignal("AbsoluteSize"):Connect(self.queueRedraw)
			local destructor = function()
				p:Disconnect()
				s:Disconnect()
				childSignalDestructors[child] = nil
			end
			childSignalDestructors[child] = destructor
			self.maid:GiveTask(destructor)
			
			self.queueRedraw()
		end
	end
	
	self.maid:GiveTask(
		self.gui.ChildAdded:Connect(handleChild),
		self.gui.ChildRemoved:Connect(removeChild)
	)
	for _, v in pairs(scrollingFrame:GetChildren()) do
		handleChild(v)
	end
	
	
end

AutoResizingScrollingFrame.RedrawBinding = "RenderStepTwice"
function AutoResizingScrollingFrame:Redraw()
	local minX = self.gui.AbsolutePosition.X - self.gui.CanvasPosition.X
	local maxX = minX + self.gui.AbsoluteSize.X
	local minY = self.gui.AbsolutePosition.Y - self.gui.CanvasPosition.Y
	local maxY = minY + self.gui.AbsoluteSize.Y
	
	local children = self.gui:GetChildren()
	for i = 1, #children do
		local child = children[i]
		if child:IsA("GuiObject") then
			minX = math.min(minX, child.AbsolutePosition.X)
			maxX = math.max(maxX, child.AbsolutePosition.X + child.AbsoluteSize.X)
			minY = math.min(minY, child.AbsolutePosition.Y)
			maxY = math.max(maxY, child.AbsolutePosition.Y + child.AbsoluteSize.Y)
		end
	end
	
	if self.scrollingDirection == Enum.ScrollingDirection.XY then
		self.gui.CanvasSize = UDim2.new(
			0,
			maxX - minX,
			0,
			maxY - minY
		)
		self.gui.CanvasPosition = Vector2.new(
			math.min(self.gui.CanvasPosition.X, math.max(0, (maxX - minX) - self.gui.AbsoluteSize.X)),
			math.min(self.gui.CanvasPosition.Y, math.max(0, (maxY - minY) - self.gui.AbsoluteSize.Y))
		)
	elseif self.scrollingDirection == Enum.ScrollingDirection.X then
		self.gui.CanvasSize = UDim2.new(
			0,
			maxX - minX,
			self.gui.CanvasSize.Y.Scale,
			self.gui.CanvasSize.Y.Offset
		)
		self.gui.CanvasPosition = Vector2.new(
			math.min(self.gui.CanvasPosition.X, math.max(0, (maxX - minX) - self.gui.AbsoluteSize.X)),
			self.gui.CanvasPosition.Y
		)
	elseif self.scrollingDirection == Enum.ScrollingDirection.Y then
		self.gui.CanvasSize = UDim2.new(
			self.gui.CanvasSize.X.Scale,
			self.gui.CanvasSize.X.Offset,
			0,
			maxY - minY
		)
		self.gui.CanvasPosition = Vector2.new(
			self.gui.CanvasPosition.X,
			math.min(self.gui.CanvasPosition.Y, math.max(0, (maxY - minY) - self.gui.AbsoluteSize.Y))
		)
	else
		warn("Invalid scrolling direction:", self.scrollingDirection)
	end
end

return AutoResizingScrollingFrame]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX11010B73D98149B3A0FA7FB2B722200E">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AutoResizeAroundChildren</string>
						<string name="ScriptGuid">{616D9F44-425A-42D0-9AFF-045E2CE13A96}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types
local actions = require(script.Parent.Parent.actions)

local AutoResizeAroundChildren = Rocrastinate.Component:extend()

local IProps = Types.Interface{
	padding = Types.Optional "number",
}
	
function AutoResizeAroundChildren:constructor(scrollingFrame, props)
	-- State
	self.gui = scrollingFrame
	
	-- Props
	assert(IProps:Check(props))
	self.padding = props.padding or 0
	
	-- Queue redraw when a child is added, removed, or has its AbsolutePosition/AbsoluteSize changed
	local childSignalDestructors = {}
	local function removeChild(child)
		local destructor = childSignalDestructors[child]
		if destructor then
			self.maid:Cleanup(destructor)
		end
		
		self.queueRedraw()
	end
	local function handleChild(child)
		if child:IsA("GuiObject") then
			local p = child:GetPropertyChangedSignal("AbsolutePosition"):Connect(self.queueRedraw)
			local s = child:GetPropertyChangedSignal("AbsoluteSize"):Connect(self.queueRedraw)
			local destructor = function()
				p:Disconnect()
				s:Disconnect()
				childSignalDestructors[child] = nil
			end
			childSignalDestructors[child] = destructor
			self.maid:GiveTask(destructor)
			
			self.queueRedraw()
		end
	end
	
	self.maid:GiveTask(
		self.gui.ChildAdded:Connect(handleChild),
		self.gui.ChildRemoved:Connect(removeChild)
	)
	for _, v in pairs(scrollingFrame:GetChildren()) do
		handleChild(v)
	end
end

AutoResizeAroundChildren.RedrawBinding = "RenderStepTwice"
function AutoResizeAroundChildren:Redraw()
	local minX = math.huge--self.gui.AbsolutePosition.X
	local maxX = -math.huge--minX
	local minY = math.huge--self.gui.AbsolutePosition.Y
	local maxY = -math.huge--minY
	
	local sizedChildFound = false
	local children = self.gui:GetChildren()
	for i = 1, #children do
		local child = children[i]
		if child:IsA("GuiObject") then
			sizedChildFound = true
			minX = math.min(minX, child.AbsolutePosition.X)
			maxX = math.max(maxX, child.AbsolutePosition.X + child.AbsoluteSize.X)
			minY = math.min(minY, child.AbsolutePosition.Y)
			maxY = math.max(maxY, child.AbsolutePosition.Y + child.AbsoluteSize.Y)
		end
	end
	
	if sizedChildFound then
		local oldSize = self.gui.AbsoluteSize
		local oldPosition = self.gui.AbsolutePosition
		local anchorPoint = self.gui.AnchorPoint
		local newSize = UDim2.new(
			0,
			maxX - minX + self.padding * 2,
			0,
			maxY - minY + self.padding * 2
		)
		self.gui.Size = newSize
		self.gui.Position = UDim2.new(
			0, minX - self.padding + anchorPoint.X * newSize.X.Offset,
			0, minY - self.padding + anchorPoint.Y * newSize.Y.Offset
		)
	end
end

return AutoResizeAroundChildren]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX4C583F061A60408F842A79BB14715932">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">NumericInputBox</string>
						<string name="ScriptGuid">{03315B00-FAFE-4D4E-BA31-68026B59EFA9}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types

local NumericInputBox = Rocrastinate.Component:extend()

local function constrainOptional(number, min, max)
	if min then
		if max then
			return math.clamp(number, min, max)
		else
			return math.max(number, min)
		end
	elseif max then
		return math.min(number, max)
	else
		return number
	end
end

local IProps = Types.Interface {
	minValue = Types.Optional "number",
	maxValue = Types.Optional "number",
	significantDigits = Types.Optional "number",
	defaultValue = Types.Optional "number",
	focusLostInputFilter = "function",
	onUserInput = "function",
}
function NumericInputBox:constructor(textBox, props)
	self.gui = textBox
	
	-- Props
	self.significantDigits = props.significantDigits or 0
	
	-- State
	self.minValue = props.minValue
	self.maxValue = props.maxValue
	self.value = props.defaultValue or constrainOptional(0, props.minValue, props.maxValue)
	self.overrideFocus = true
	
	-- Input capture
	self.maid:GiveTask(
		self.gui.FocusLost:Connect(function(enterPressed, input)
			local userInputNumber = tonumber(self.gui.Text)
			if not userInputNumber then
				self.overrideFocus = true
				self.queueRedraw()
				return
			end
			
			if props.focusLostInputFilter(enterPressed, input) then
				local inputValue = userInputNumber
				
				-- Round
				local increment = 10 ^ (-self.significantDigits)
				inputValue = math.floor(inputValue / increment) * increment
				
				-- Clamp
				inputValue = constrainOptional(inputValue, self.minValue, self.maxValue)
				
				-- Display updates
				self:SetValue(inputValue, true)
				props.onUserInput(inputValue)
			end
		end)
	)
end

function NumericInputBox:Redraw()
	if not self.gui:IsFocused() or self.overrideFocus then
		self.overrideFocus = false
		
		-- Round to nearest significant digits
		local roundedValueStr
		if self.significantDigits > 0 then
			roundedValueStr = string.format("%0." .. self.significantDigits .. "f", self.value)
		elseif self.significantDigits == 0 then
			roundedValueStr = tostring(math.floor(self.value + 0.5))
		else
			local increment = 10 ^ (-self.significantDigits)
			roundedValueStr = tostring(math.floor(self.value / increment + 0.5) * increment)
		end
		
		-- Truncate decimal zeroes
		if roundedValueStr:find("%.") then
			local truncatedEnd = #roundedValueStr
			for i = #roundedValueStr, 1, -1 do
				if roundedValueStr:byte(i) == string.byte('0') then
					truncatedEnd = truncatedEnd - 1
				elseif roundedValueStr:byte(i) == string.byte('.') then
					truncatedEnd = truncatedEnd - 1
					break
				else
					break
				end
			end
			roundedValueStr = roundedValueStr:sub(1, truncatedEnd)
		end

		self.gui.Text = roundedValueStr
	end
end

function NumericInputBox:SetValue(value, overrideFocus)
	self.value = value
	self.overrideFocus = overrideFocus
	
	self.queueRedraw()
end

function NumericInputBox:SetExtremeValues(min, max)
	self.minValue = min
	self.maxValue = max
end

function NumericInputBox:GetValue()
	return self.value
end

return NumericInputBox]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX3439F877277343C48420ADAAD888443E">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RatioInputBox</string>
						<string name="ScriptGuid">{0A0B03E9-FD31-4DC9-97DC-1A365F4BD6A2}</string>
						<ProtectedString name="Source"><![CDATA[local RATIO_MAX = 999

local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types

local RatioInputBox = Rocrastinate.Component:extend()

local function gcd(a, b)
	if b == 0 then
		return a
	else
		return gcd(b, a % b)
	end
end

local function constrainOptional(number, min, max)
	if min then
		if max then
			return math.clamp(number, min, max)
		else
			return math.max(number, min)
		end
	elseif max then
		return math.min(number, max)
	else
		return number
	end
end

local IProps = Types.Interface {
	defaultValues = Types.Optional (Types.Interface{
		[1] = "number",
		[2] = "number",
	}),
	focusLostInputFilter = "function",
	onUserInput = "function",
}
function RatioInputBox:constructor(textBox, props)
	self.gui = textBox
	
	-- State
	self.value1 = props.defaultValue and props.defaultValue[1] or constrainOptional(1, props.minValue, props.maxValue)
	self.value2 = props.defaultValue and props.defaultValue[2] or constrainOptional(1, props.minValue, props.maxValue)
	self.overrideFocus = true
	
	-- Input capture
	self.maid:GiveTask(
		self.gui.FocusLost:Connect(function(enterPressed, input)
			local inputIsValid = false
			local raw1, raw2 = self.gui.Text:match("([0-9]+):([0-9]+)")
			local inputNumber1, inputNumber2
			if raw1 and raw2 then
				inputNumber1, inputNumber2 = tonumber(raw1), tonumber(raw2)
				if inputNumber1 and inputNumber2 then
					inputIsValid = true
				end
			end
			
			if not inputIsValid then
				self.overrideFocus = true
				self.queueRedraw()
				return
			end
			
			if props.focusLostInputFilter(enterPressed, input) then
				local inputValue1, inputValue2 = inputNumber1, inputNumber2
				
				-- Represent as whole numbers
				if inputValue1 ~= math.floor(inputValue1)
				or inputValue2 ~= math.floor(inputValue2) then
					local orderOfMagnitude = math.max(inputValue1, inputValue2)
					inputValue1 = math.floor(inputValue1 / orderOfMagnitude * RATIO_MAX + 0.5)
					inputValue2 = math.floor(inputValue2 / orderOfMagnitude * RATIO_MAX + 0.5)
				end
				
				-- Clamp
				inputValue1 = math.clamp(inputValue1, 1, RATIO_MAX)
				inputValue2 = math.clamp(inputValue2, 1, RATIO_MAX)
				
				-- Simplify
				local denominator = gcd(inputValue1, inputValue2)
				inputValue1 = inputValue1 / denominator
				inputValue2 = inputValue2 / denominator
				
				-- Display updates
				self:SetValues(inputValue1, inputValue2, true)
				props.onUserInput(inputValue1, inputValue2)
			end
		end)
	)
end

function RatioInputBox:Redraw()
	if not self.gui:IsFocused() or self.overrideFocus then
		self.overrideFocus = false
		
		self.gui.Text = tostring(self.value1) .. ":" .. tostring(self.value2)
	end
end

function RatioInputBox:SetValues(value1, value2, overrideFocus)
	self.value1 = value1
	self.value2 = value2
	self.overrideFocus = overrideFocus
	
	self.queueRedraw()
end

function RatioInputBox:GetValues()
	return self.value1, self.value2
end

return RatioInputBox]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0C189F196BE44BE898B9E4B169D06EFD">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DragInput</string>
						<string name="ScriptGuid">{EA99DA23-3A38-4E8A-AF26-25B2F6730750}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local Types = dependencies.Types

local DragInput = Rocrastinate.Component:extend()

local IProps = Types.Interface {
	began = Types.Optional "function",
	ended = Types.Optional "function",
	moved = "function",
}
function DragInput:constructor(object, props)
	-- Props
	assert(IProps:Check(props))
	
	local saveActive = object.Active
	object.Active = true
	self.maid:GiveTask(function()
		object.Active = saveActive
	end)
	
	local inputChangedDestructor = nil
	local dragging = false
	local lastX, lastY
	self.maid:GiveTask(
		object.InputBegan:Connect(function(input, gameProcessed)
			if gameProcessed then return end
			
			-- Determine if this is the topmost active frame
			local base = object
			repeat
				base = base.Parent
			until not base or base:IsA("BasePlayerGui")
			if not base then return end
			local elementsAtPosition = base:GetGuiObjectsAtPosition(input.Position.X, input.Position.Y)
			for i = 1, #elementsAtPosition do
				local element = elementsAtPosition[i]
				if element == object then break end
				
				-- Void input if there is a preceeding Active element
				if element.Active then return end
			end
			
			local shouldBeginDrag = false
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				shouldBeginDrag = true
			elseif input.UserInputType == Enum.UserInputType.Touch then
				shouldBeginDrag = true
			end
			
			if shouldBeginDrag then
				dragging = true
				lastX, lastY = input.Position.X, input.Position.Y
				inputChangedDestructor = self.maid:GiveTask(
					game:GetService("UserInputService").InputChanged:Connect(function(input)
						if dragging then
							local currentX, currentY = input.Position.X, input.Position.Y
							local dx, dy = currentX - lastX, currentY - lastY
							lastX, lastY = currentX, currentY
							
							if props.moved then
								props.moved(currentX, currentY, dx, dy)
							end
						end
					end)
				)
				
				if props.began then
					props.began(lastX, lastY)
				end
			end
		end),
		object.InputEnded:Connect(function(input)
			if not dragging then return end
			
			local shouldEndDrag = false
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				shouldEndDrag = true
			elseif input.UserInputType == Enum.UserInputType.Touch then
				shouldEndDrag = true
			end
			
			if shouldEndDrag then
				dragging = false
				self.maid:Cleanup(inputChangedDestructor)

				if props.ended then
					props.ended(lastX, lastY)
				end
			end
		end)
	)
end

return DragInput]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXB3BD15716DE44B5C96C161ADFFF26E73">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">rootReducer</string>
					<string name="ScriptGuid">{1B61E06D-4A19-42EA-BE45-56D8665B14AB}</string>
					<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local enabled = require(script.enabled)
local viewport = require(script.viewport)
local viewportCamera = require(script.viewportCamera)
local theme = require(script.theme)

local reducer = Rocrastinate.combineReducers {
	enabled = enabled.reducer,
	viewport = viewport.reducer,
	viewportCamera = viewportCamera.reducer,
	theme = theme.reducer,
}

local initialState = {
	enabled = enabled.initialState,
	viewport = viewport.initialState,
	viewportCamera = viewportCamera.initialState,
	theme = theme.initialState,
}

return {
	reducer = reducer,
	initialState = initialState,
}]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX31D607CFCC3742CCA9E027268C3ECBB2">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">enabled</string>
						<string name="ScriptGuid">{7880951D-EDF9-4050-A645-7564519600E4}</string>
						<ProtectedString name="Source"><![CDATA[local reducer = function(action, get, set)
	if action.type == 'SET_ENABLED' then
		set(action.payload)
	end
end

initialState = false

return {
	reducer = reducer,
	initialState = initialState,
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD23B96F97C3B4BD5836332001A4C51EE">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">viewport</string>
						<string name="ScriptGuid">{745670A2-AFD8-45A6-A6F0-5122957BB961}</string>
						<ProtectedString name="Source"><![CDATA[local reducer = function(action, get, set)
	if action.type == 'SET_VIEWPORT_WIDTH' then
		set("width", action.payload)
	elseif action.type == 'SET_VIEWPORT_HEIGHT' then
		set("height", action.payload)
	elseif action.type == 'SET_VIEWPORT_ASPECT_RATIO' then
		set("aspectRatio", action.payload)
	elseif action.type == 'TOGGLE_ASPECT_RATIO_LOCKED' then
		set("aspectRatioLocked", not get("aspectRatioLocked"))
	elseif action.type == 'SET_VIEWPORT' then
		set("height", action.payload.height)
		set("width", action.payload.width)
	elseif action.type == 'SET_VIEWPORT_TEMPLATE' then
		set("template", action.payload)
	elseif action.type == 'TOGGLE_IS_SELECTING_TEMPLATE' then
		set("selectingTemplate", not get("selectingTemplate"))
	elseif action.type == 'SET_VIEWPORT_BACKGROUND_COLOR' then
		set("backgroundColor", action.payload)
	end
end

initialState = {
	width = 280,--256,
	height = 280,--256,
	aspectRatio = {
		x = 1,
		y = 1,
	},
	aspectRatioLocked = true,
	template = {},
	selectingTemplate = true,
	backgroundColor = Color3.new(0, 255, 0),
}

return {
	reducer = reducer,
	initialState = initialState,
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0FF2B5B9EC72416186D32ED74D372BF4">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">theme</string>
						<string name="ScriptGuid">{52552945-E792-439C-AD25-3742E46CD96A}</string>
						<ProtectedString name="Source"><![CDATA[local themes = require(script.Parent.Parent.themes)

local reducer = function(action, get, set)
	if action.type == 'SET_THEME' then
		set(action.payload)
	end
end

initialState = themes.Dark

return {
	reducer = reducer,
	initialState = initialState,
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD90C05D4CA6349E3BFC8681C8E0F0C41">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">viewportCamera</string>
						<string name="ScriptGuid">{091AED10-E395-49D2-BC09-956BAC89CC0F}</string>
						<ProtectedString name="Source"><![CDATA[local actions = require(script.Parent.Parent.actions)

local reducer = function(action, get, set)
	if action.type == 'SET_VIEWPORT_CAMERA_SLIDER_VALUE' then
		local sliderIndex = actions.MapSliderTypeToSliderIndex(action.payload.slider)
		if not sliderIndex then
			error("Invalid slider type: '" .. tostring(action.payload.slider) .. "'")
		end
		
		set("sliders", sliderIndex, "value", action.payload.value)
	elseif action.type == 'SET_VIEWPORT_CAMERA_SLIDER_INCREMENT' then
		local sliderIndex = actions.MapSliderTypeToSliderIndex(action.payload.slider)
		if not sliderIndex then
			error("Invalid slider type: '" .. tostring(action.payload.slider) .. "'")
		end
		
		set("sliders", sliderIndex, "increment", action.payload.value)
	end
end

local initialState = {
	sliders = {
		fieldOfView = {
			value = 1,
			increment = 5,
			
			quantizationBasis = 70,
			minValue = 1,
			maxValue = 120,
		},
		pitch = {
			value = -20,
			increment = 5,
			
			quantizationBasis = 0,
			minValue = -90,
			maxValue = 90,
		},
		yaw = {
			value = -135,
			increment = 45,
			
			quantizationBasis = 0,
			minValue = -180,
			maxValue = 180,
		},
		zoom = {
			value = 100,
			increment = 10,
			
			quantizationBasis = 100,
			minValue = 25,
			maxValue = 400,
		},
	},
}

return {
	reducer = reducer,
	initialState = initialState,
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX2DC5FC8D38094019B2DD9CD7C5DB1C0C">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">dependencies</string>
					<string name="ScriptGuid">{649B4A60-FD2D-43FD-9A93-62E5931F1927}</string>
					<ProtectedString name="Source"><![CDATA[return {
	Rocrastinate = require(script.Rocrastinate),
	Types = require(script.Types),
}]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX3DBF7782D5AB48E3BA9683B5973D7526">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Types</string>
						<string name="ScriptGuid">{C6BB3E36-0100-48B9-886D-013C07AEECE4}</string>
						<ProtectedString name="Source"><![CDATA[-- An OOP/Type system implementation, with some intellisense binding

local Types = {}

Types.IType = require(script.IType)

-- Types (validated post-loading)
Types.Optional = require(script.Optional)
Types.Optional:implement(Types.IType)

Types.Primitive = require(script.Primitive)
Types.Primitive:implement(Types.IType)

Types.Literal = require(script.Literal)
Types.Literal:implement(Types.IType)

Types.Union = require(script.Union)
Types.Union:implement(Types.IType)

Types.Intersection = require(script.Intersection)
Types.Intersection:implement(Types.IType)

Types.Array = require(script.Array)
Types.Array:implement(Types.IType)

Types.Map = require(script.Map)
Types.Map:implement(Types.IType)

Types.Interface = require(script.Interface)
Types.Interface:implement(Types.IType)

Types.InstanceIsA = require(script.InstanceIsA)
Types.InstanceIsA:implement(Types.IType)

Types.EnumItem = require(script.EnumItem)
Types.EnumItem:implement(Types.IType)

return Types]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXB1188E105DC048E7B08C746610F88722">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">IType</string>
							<string name="ScriptGuid">{8219E133-0860-4426-89CE-1CEA75611A45}</string>
							<ProtectedString name="Source"><![CDATA[local Interface = require(script.Parent.Interface)

local IType = Interface.new({
	Check = "function", -- Check(value: unknown): (true, nil) or (false, string)
	Index = "function", -- Index(key: any): any
	ToString = "function", -- ToString(alreadyChecked: Map<table, true>): string
})

return IType]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXFEC727C513A245509FB76F9FC95DB02A">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Primitive</string>
							<string name="ScriptGuid">{BE015C32-5D81-4248-8C98-5D7DCAE47A98}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)

local Primitive, members, metatable = Class.new()

function Primitive.constructor(self, typeString)
	self._name = typeString
end

function members:Index(value)
	return Primitive.new("any")
end

-- Primitive:implement(IType, function()
function members:Check(value)
	local implementedType = typeof(value)
	
	if self._name == "any" then
		return true
	end
	if implementedType == self._name then
		return true
	end
	
	return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "'"
end

function members:ToString(_)
	return self._name
end

metatable.__tostring = members.ToString

return Primitive]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX378D7703C8A24EB58A1C5CC0AC7DEE37">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Union</string>
							<string name="ScriptGuid">{9AF1E10C-E3A3-416C-BA44-3FC346BF950B}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local UnionType, members, metatable = Class.new()

function UnionType.constructor(self, ...)
	local args = { ... }
	local filtered = {}
	for i = 1, #args do
		local arg = args[i]
		if typeof(arg) == "string" then
			filtered[i] = Primitive(arg)
		else
			filtered[i] = arg
		end
	end
	
	
	self._composition = filtered
end

function members:Index(key)
	local indexType = typeof(key)
	
	-- Currently, type relation is not checked, so two incompatible types could be indexed; the last type will be returned
	local valueType, err
	for i = 1, #self._composition do
		valueType, err = self._composition[i]:Index(key)
		if not valueType then
			return nil, "Property '" .. tostring(key) .. "' does not exist on type '" .. self:ToString() .. "'"
		end
	end
	
	return valueType
end

-- PrimitiveType:implement(IType, function()
function members:Check(value)
	local implementedType = typeof(value)
	
	local matchFound = false
	for i = 1, #self._composition do
		local success, err = self._composition[i]:Check(value)
		if success then
			matchFound = true
			break
		end
	end
	
	if matchFound then
		return true
	else
		return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "'"
	end
end

local TRUNCATE_AFTER = 5
function members:ToString(checked)
	local unioned = {}
	for i = 1, #self._composition do
		unioned[#unioned + 1] = self._composition[i]:ToString(checked)
	end
	
	local truncated = unioned
	if #unioned > TRUNCATE_AFTER then
		truncated = {}
		for i = 1, TRUNCATE_AFTER - 1 do
			truncated[i] = unioned[i]
		end
		
		truncated[TRUNCATE_AFTER] = "(" .. #unioned - TRUNCATE_AFTER .. " more)"
		truncated[TRUNCATE_AFTER + 1] = unioned[#unioned]
	end
	
	return table.concat(truncated, " or ")
end

metatable.__tostring = members.ToString

return UnionType]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX87DBC2E833FA4C96A8FDFFF4A2926B85">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Optional</string>
							<string name="ScriptGuid">{2F0CB6E5-D4B3-41C1-99D3-449B8103268E}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Union = require(script.Parent.Union)

local Optional, members, metatable = Class.new()
local super = Optional:extend(Union)

function Optional.constructor(self, ...)
	super(self, "nil", ...)
end

return Optional]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4432F7B0A805404EA17A642A00760770">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Interface</string>
							<string name="ScriptGuid">{99D763AB-4DD5-4F09-9BA6-5E93315DFB3D}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local Interface, members, metatable = Class.new()

-- Declare a symbolic representation of an interface (Note: there is no type checking for members; only implementation)
-- Members keys are identifiers, and member values can be an AbstractMethod, Union, or raw string type.
-- "any" type will allow anything (including nil) to be assigned
function Interface.constructor(self, template)
	local filtered = {}
	for k, v in pairs(template) do
		if typeof(v) == "string" then
			filtered[k] = Primitive(v)
		elseif typeof(v) == "table" and getmetatable(v) == nil then
			filtered[k] = Interface(v)
		elseif typeof(v) == "table" then
			filtered[k] = v
		else
			error("Unexpected value '" .. tostring(v) .. "' for Types.Interface.new at key '" .. tostring(k) .. "'")
		end
	end
	
	
	self._composition = filtered
end

function members:Index(key)
	local indexType = typeof(key)
	if indexType == "nil" then
		return nil, "Property 'nil' does not exist on type '" .. self:ToString() .."'"
	else
		local valueType = self._composition[key]
		if valueType then
			return valueType
		else
			return nil, "Property '" .. tostring(key) .. "' does not exist on type '" .. self:ToString() .."'"
		end
	end
end

-- PrimitiveType:implement(IType, function()
function members:Check(value)
	local implementedType = typeof(value)

	if implementedType == "table" then
		for k, memberTypeNode in pairs(self._composition) do
			local success, err = memberTypeNode:Check(value[k])
			if not success then
				return false, "Type '" .. implementedType .. "' is not assignable to interface:\n"
					.. "Types of property '" .. k .. "' are incompatible\n"
					.. err
			end
		end
	else
		return false, "Type '" .. implementedType .. "' is not assignable to type 'table'"
	end
	
	return true
end

local TRUNCATE_AFTER = 10
function members:ToString(checked)
	checked = checked or {}
	if checked[self] then return "{...}" end
	checked[self] = true
	
	local fieldStrs = {}
	for k, memberTypeNode in pairs(self._composition) do
		fieldStrs[#fieldStrs + 1] = tostring(k) .. ": " .. memberTypeNode:ToString(checked)
	end
	
	local truncated = fieldStrs
	if #fieldStrs > TRUNCATE_AFTER then
		truncated = {}
		for i = 1, TRUNCATE_AFTER - 1 do
			truncated[i] = fieldStrs[i]
		end
		
		truncated[TRUNCATE_AFTER] = "(" .. #fieldStrs - TRUNCATE_AFTER .. " more)"
		truncated[TRUNCATE_AFTER + 1] = fieldStrs[#fieldStrs]
	end
	
	return "{" .. table.concat(truncated, ", ") .. "}"
end

metatable.__tostring = members.ToString

return Interface]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX5BBDF83FE4684479A2B3E280A41FB95B">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Literal</string>
							<string name="ScriptGuid">{0E5FE712-EEC3-4185-980B-CE7F2726011E}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)

local Literal, members, metatable = Class.new()

function Literal.constructor(self, typeString)
	self._value = typeString
end

-- PrimitiveType:implement(IType, function()
function members:Check(value)
	if value == self._value then
		return true
	else
		return false, "Type '" .. typeof(value) .. "' is not assignable to literal type '" .. self:ToString() .. "'"
	end
end

function members:ToString(_)
	if type(self._value) == "string" then
		if self._value:find("'") then
			if self._value:find('"') then
				return '[[' .. self._value .. ']]'
			else
				return '"' .. self._value .. '"'
			end
		else
			return "'" .. self._value .. "'"
		end
	else
		return tostring(self._value)
	end
end

metatable.__tostring = members.ToString

return Literal]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX8A7B507896D7427CB3A8C8F8AFF42B35">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Intersection</string>
							<string name="ScriptGuid">{2F8821F1-FDE7-4BD9-86B0-C688B09D38EE}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local IntersectionType, members, metatable = Class.new()

function IntersectionType.constructor(self, ...)
	local args = { ... }
	local filtered = {}
	for i = 1, #args do
		local arg = args[i]
		if typeof(arg) == "string" then
			filtered[i] = Primitive(arg)
		else
			filtered[i] = arg
		end
	end
	
	
	self._composition = filtered
end

function members:Index(key)
	local indexType = typeof(key)
	
	-- Currently, type relation is not checked, so two incompatible types could be indexed; the first type will be returned
	for i = 1, #self._composition do
		local valueType, err = self._composition[i]:Index(key)
		if valueType then
			return valueType
		end
	end
	
	return nil, "Property '" .. tostring(key) .. "' does not exist on type '" .. self:ToString() .."'"
end

-- IntersectionType:implement(IType, function()
function members:Check(value)
	local implementedType = typeof(value)
	
	for i = 1, #self._composition do
		local success, err = self._composition[i]:Check(value)
		if not success then
			return false, "Type '" .. implementedType .. "' is not assignable to type '"
				.. self:ToString() .. "'\n"
				.. err
		end
	end
	
	return true
end

local TRUNCATE_AFTER = 5
function members:ToString(checked)
	local intersected = {}
	for i = 1, #self._composition do
		intersected[#intersected + 1] = self._composition[i]:ToString(checked)
	end
	
	local truncated = intersected
	if #intersected > TRUNCATE_AFTER then
		truncated = {}
		for i = 1, TRUNCATE_AFTER - 1 do
			truncated[i] = intersected[i]
		end
		
		truncated[TRUNCATE_AFTER] = "(" .. #intersected - TRUNCATE_AFTER .. " more)"
		truncated[TRUNCATE_AFTER + 1] = intersected[#intersected]
	end
	
	return table.concat(truncated, " and ")
end

metatable.__tostring = members.ToString

return IntersectionType]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX6DFEFAC242BD45C68774C9414CC4D873">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Array</string>
							<string name="ScriptGuid">{BE4C2497-CDE2-4853-B6EF-D14A7011B261}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local Array, members, metatable = Class.new()

function Array.constructor(self, T)
	if typeof(T) == "string" then
		T = Primitive(T)
	end
	
	self._valueType = T
end

function members:Index(key)
	local indexType = typeof(key)
	if indexType == "number" and key == math.floor(key) and key > 0 then
		return self._valueType
	else
		return nil, "Property '" .. tostring(key) .. "' does not exist on type '" .. self:ToString() .."'"
	end
end

function members:Check(value)
	local implementedType = typeof(value)

	if implementedType == "table" then
		local expected = 1
		for k, v in pairs(value) do
			if k ~= expected then
				return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "':\n"
					.. "Array key '" .. tostring(k) .. "' is not a sequential integer"
			end
			
			local success, err = self._valueType:Check(v)
			if not success then
				return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "':\n"
					.. "Array value at index '" .. tostring(k) .. "' is not compatible:\n"
					.. err
			end
			
			expected = expected + 1
		end
	else
		return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "'"
	end
	
	return true
end

function members:ToString(checked)
	checked = checked or {}
	if checked[self] then return "Array<...>" end
	checked[self] = true
	
	return "Array<" .. self._valueType:ToString() .. ">"
end

metatable.__tostring = members.ToString

return Array]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA86C387087DC454FA8EE9B9907306C72">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Map</string>
							<string name="ScriptGuid">{53F56EDE-D888-4196-8256-98B6971CB1C1}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local Map, members, metatable = Class.new()

function Map.constructor(self, K, V)
	if typeof(K) == "string" then
		K = Primitive(K)
	end
	if typeof(V) == "string" then
		V = Primitive(V)
	end
	
	self._keyType = K
	self._valueType = V
end

function members:Index(key)
	local keyMatchesType, err = self._keyType:Check(key)
	if keyMatchesType then
		return self._valueType
	else
		return nil, "Property '" .. tostring(key) .. "' does not exist on type '" .. self:ToString() .."'"
	end
end

function members:Check(value)
	local implementedType = typeof(value)

	if implementedType == "table" then
		for k, v in pairs(value) do
			local success, err = self._keyType:Check(k)
			if not success then
				return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "':\n"
					.. "Map key at index '" .. tostring(k) .. "' is not compatible:\n"
					.. err
			end
			
			local success, err = self._valueType:Check(v)
			if not success then
				return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "':\n"
					.. "Map value at index '" .. tostring(k) .. "' is not compatible:\n"
					.. err
			end
		end
	else
		return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "'"
	end
	
	return true
end

function members:ToString(checked)
	checked = checked or {}
	if checked[self] then return "Map<...>" end
	checked[self] = true
	
	return "Map<" .. self._keyType:ToString(checked) .. "," .. self._valueType:ToString(checked) .. ">"
end

metatable.__tostring = members.ToString

return Map]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX84587462D6ED4CE98226733F0A22C031">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">InstanceIsA</string>
							<string name="ScriptGuid">{82DFBB2D-2774-424D-9912-C14103195E9D}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local InstanceIsA, members, metatable = Class.new()

function InstanceIsA.constructor(self, className)
	self._className = className
end

function members:Index(key)
	return Primitive.new("any")
end

-- InstanceIsA:implement(IType, function()
function members:Check(value)
	local implementedType = typeof(value)
	
	if implementedType == "Instance" then
		if value:IsA(self._className) then
			return true
		else
			return false, "Type '" .. implementedType.ClassName .. "' is not assignable to type '" .. self:ToString() .. "'"
		end
	end
	
	return false, "Type '" .. implementedType .. "' is not assignable to type '" .. self:ToString() .. "'"
end

function members:ToString(_)
	return self._className
end

metatable.__tostring = members.ToString

return InstanceIsA]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXFCACE2BF9CA94AE28BDF577BFD8CBA8E">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">EnumItem</string>
							<string name="ScriptGuid">{0068C2CE-4801-422F-94D2-37800D8D87F3}</string>
							<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)
local Primitive = require(script.Parent.Primitive)

local EnumItem, members, metatable = Class.new()

function EnumItem.constructor(self, enum)
	self._enumType = enum
end

function members:Index(key)
	return Primitive.new("any")
end

-- EnumItem:implement(IType, function()
function members:Check(value)
	local implementedType = typeof(value)
	
	if implementedType == "EnumItem" then
		if value.EnumType == self._enumType then
			return true
		else
			return false, "EnumItem '" .. tostring(value) .. "' is not assignable to Enum type '" .. self:ToString() .. "'"
		end
	end
	
	return false, "Type '" .. implementedType .. "' is not assignable to Enum type '" .. self:ToString() .. "'"
end

function members:ToString(_)
	return tostring(self._enumType)
end

metatable.__tostring = members.ToString

return EnumItem]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="PackageLink" referent="RBX52851113124841D9A61384ABE4DD3EA4">
						<Properties>
							<bool name="AutoUpdate">false</bool>
							<string name="Name">PackageLink</string>
							<int64 name="OriginalHash">3697697058826775504</int64>
							<Content name="PackageIdSerialize"><url>rbxassetid://3020318896</url></Content>
							<string name="SymbolicLink"></string>
							<BinaryString name="Tags"></BinaryString>
							<int64 name="VersionIdSerialize">9</int64>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXB1485E020B8A479CBC091531A1DDCCC1">
						<Properties>
							<string name="Name">OOP</string>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX0171E494D7394E639674EF234A53EE9C">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">AbstractClass</string>
								<string name="ScriptGuid">{C7E49F0A-DA5E-4133-8BA1-697077CE7960}</string>
								<ProtectedString name="Source"><![CDATA[local Class = require(script.Parent.OOP.Class)

-- Only newability is removed in the creation of an abstract class. Use interfaces for actual abstract members.
local AbstractClass = {
	new = function()
		local statics, members, metatable = Class.new()
		statics.new = nil
		
		return statics, members, metatable
	end
}
setmetatable(AbstractClass, {__call = function(self, ...) return self.new(...) end})

return AbstractClass]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX2BFAA412ABEA4F40A022A626BD4E5348">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Class</string>
								<string name="ScriptGuid">{DD3F4626-0D8B-43D8-B7CE-CDA432E7D4AB}</string>
								<ProtectedString name="Source"><![CDATA[-- No, we can't bootstrap this.
-- Or can we... *vsauce music plays*

local Class = {}
setmetatable(Class, {__call = function(self, ...) return self.new(...) end})

function Class.new()
	local statics, members, metatable = {}, {}, {}
	statics._members = members
	statics._metatable = metatable
	members._class = statics
	
	-- Add call newability
	setmetatable(statics, {__call = function(self, ...) return self.new(...) end})
	
	metatable.__index = members
	
	function statics.constructor() end
	function statics.new(...)
		local object = setmetatable({}, metatable)
		statics.constructor(object, ...)
		
		return object
	end
	
	-- Sets the extension of a class. Will override any previous extend calls.
	-- Allows multiple inheritance in the order of seach superclass provided.
	-- Returns the "super" object.
	-- The "__call" metamethod on the super object is used as a constructor.
	--[[
		Super usage:
		
		function members:MyClassMethod(...)
			super.MyClassMethod(self, ...)
		end
		
		function MyClass.constructor(self, ...)
			super(self, ...)
		end
	--]]
	function statics:extend(...)
		local orderedSuperclasses = { ... }
		
		-- Validate that these are the static portion of classes
		for i = 1, #orderedSuperclasses do
			local superclass = orderedSuperclasses[i]
			if type(superclass) ~= "table"
				or type(superclass.constructor) ~= "function" then
				error("Argument #" .. i .. " for 'extend' is not a valid class")
			end
		end
		
		local collatedConstructor = function(self, ...)
			for i = 1, #orderedSuperclasses do
				orderedSuperclasses[i].constructor(self, ...)
			end
		end
		
		local super = setmetatable({}, {
			__index = function(_, key)
				-- Check members
				for i = 1, #orderedSuperclasses do
					local superclass = orderedSuperclasses[i]
					local val = superclass._members[key]
					if val ~= nil then
						return val
					end
				end
				
				-- Check special keywords
				if key == "constructor" then
					return collatedConstructor
				end
			end,
			__call = function(_, self, ...)
				return collatedConstructor(self, ...)
			end,
		})
		
		-- Override members extension
		setmetatable(self._members, {__index = super})
		
		-- Override statics extension
		getmetatable(self).__index = function(_, k)
			for i = 1, #orderedSuperclasses do
				local val = orderedSuperclasses[i][k]
				if val then
					return val
				end
			end
		end
		
		-- Underride metamethods (Watch out for dreaded diamonds... first superclass encountered gets priority)
		for i = 1, #orderedSuperclasses do
			local superclass = orderedSuperclasses[i]
			for k, v in pairs(superclass._metatable) do
				if metatable[k] == nil then
					metatable[k] = v
				end
			end
		end
		
		return super
	end
	

	
	-- Wealky validates the correct implementation of abstract methods in an interface
	-- Returns (true, nil) for success or (false, string) for errors with a message
	-- Usage:
	--[[
	
	local IMyInterface = Types.Interface({
		SomePublicValue = "string",
		SomePublicMethod = "function", -- SomePublicMethod(foo: string, bar: string): string
	})
	
	OR
	
	local IMyInterface = Types.Interface({
		SomePublicMethod = function(foo, bar) return "" end, -- A stylistic templated function (note that parameter/return types are not validated)
	})
	
	. . .
	
	local MyClass, members, statics = Class.new()
	
	MyClass:implement(IMyInterface, function()
		members.SomePublicValue = "Foo"
		function members:SomePublicMethod(foo, bar)
			return "baz"
		end
	end)
	
	
	]]
	function statics:implement(interface, implementor)
		if implementor then
			implementor()
		end
		interface:Check(self._members)
	end
	
	return statics, members, metatable
end

return Class]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="PackageLink" referent="RBX71B7F97636E746AAB7BC0429AC548022">
							<Properties>
								<bool name="AutoUpdate">false</bool>
								<string name="Name">PackageLink</string>
								<int64 name="OriginalHash">942820249770493335</int64>
								<Content name="PackageIdSerialize"><url>rbxassetid://3014158444</url></Content>
								<string name="SymbolicLink"></string>
								<BinaryString name="Tags"></BinaryString>
								<int64 name="VersionIdSerialize">16</int64>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX2D7A85F92FE84BB0B3D823D6CA1E998D">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Rocrastinate</string>
						<string name="ScriptGuid">{360017F8-9EAE-49A4-9642-E2D1217671E6}</string>
						<ProtectedString name="Source"><![CDATA[local Rocrastinate = {}

Rocrastinate.createStore = require(script.createStore)
Rocrastinate.combineReducers = require(script.combineReducers)

Rocrastinate.Component = require(script.Component)
Rocrastinate.LoggerMiddleware = require(script.Middlewares.LoggerMiddleware)
Rocrastinate.InspectorMiddleware = require(script.Middlewares.InspectorMiddleware)
Rocrastinate.ThunkMiddleware = require(script.Middlewares.ThunkMiddleware)
Rocrastinate.SpunkMiddleware = require(script.Middlewares.SpunkMiddleware)

return Rocrastinate]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXEB33EFB3E10F45098FABCBFCC8A7AB5A">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Maid</string>
							<string name="ScriptGuid">{0FCF771A-2E6B-4E3A-A07A-BF54F6C1A675}</string>
							<ProtectedString name="Source"><![CDATA[local FastSpawn = require(script.Parent.Util.FastSpawn)

local function taskDestructor(task)
	local taskType = typeof(task)
	if taskType == "function" then
		-- Callbacks
		FastSpawn(task)
	elseif taskType == "RBXScriptConnection" then
		-- Connections
		task:Disconnect()
	elseif taskType == "string" then
		-- Render step bindings
		pcall(function()
			game:GetService("RunService"):UnbindFromRenderStep(task)
		end)
	elseif taskType == "Instance" or (taskType == "table" and task.Destroy) then
		-- Instances and custom objects with a :Destroy() method
		task:Destroy()
	else
		warn("Unhandled maid task '" .. tostring(task) .. "' of type '" .. taskType .. "'", debug.traceback())
	end
end

local Maid = {}
Maid.__index = Maid

function Maid:GiveTask(...)
	local tasksToAdd = { ... }
	for i = 1, #tasksToAdd do
		self.tasks[#self.tasks + 1] = tasksToAdd[i]
	end
	return ... -- Return for the sake of syntactic convenience.
end

function Maid:CleanupAllTasks()
	local tasks = self.tasks
	
	-- Disconnect all events first as we know this is safe
	for index, task in pairs(tasks) do
		if typeof(task) == "RBXScriptConnection" then
			tasks[index] = nil
			task:Disconnect()
		end
	end

	-- Clear out tasks table completely, even if clean up tasks add more tasks to the maid
	local index, task = next(tasks)
	while task ~= nil do
		tasks[index] = nil
		taskDestructor(task)
		index, task = next(tasks)
	end
end

-- Removes an individual task from the maid's task queue and destroys it
function Maid:Cleanup(task)
	self:RemoveTask(task)
	taskDestructor(task)
end

-- Removes a task from the maid's task queue without destroying it
function Maid:RemoveTask(task)
	local tasks = self.tasks
	for index, otherTask in pairs(tasks) do
		if otherTask == task then
			tasks[index] = nil
			break
		end
	end
end

function Maid.new()
	local self = setmetatable({}, Maid)
	self.tasks = {}
	
	return self
end

return Maid]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX12C62585805B49809F793FF0EEAED479">
						<Properties>
							<string name="Name">Util</string>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXC39DCE8FC2C14A8B80ADE887CA5E715B">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">FastSpawn</string>
								<string name="ScriptGuid">{33937DC7-E6DC-424D-9459-6F05D76FFD9F}</string>
								<ProtectedString name="Source"><![CDATA[local FastSpawnerEvent = Instance.new("BindableEvent")
FastSpawnerEvent.Event:Connect(function(callback, argsPointer)
	callback(argsPointer())
end)

local function createPointer(...)
	local args = { ... }
	return function()
		return unpack(args)
	end
end

local function FastSpawn(func, ...)
	assert(type(func) == "function", "Invalid arguments (function expected, got " .. typeof(func) .. ")")
	FastSpawnerEvent:Fire(func, createPointer(...))
end

return FastSpawn]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX29C98FA0EF034726A6DC9848D054259A">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ParseKeypath</string>
								<string name="ScriptGuid">{C21EC04F-2C74-468A-B57D-C7A628B46C96}</string>
								<ProtectedString name="Source"><![CDATA[local function ParseKeypath(stringKeypath)
	local tabKeyPath = {}
	for k in stringKeypath:gmatch("[^%.]+") do
		tabKeyPath[#tabKeyPath + 1] = k
	end
	return tabKeyPath
end

return ParseKeypath]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX3A1EC975F83D4031BC7D7796A2F383B7">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">DeepCopyTable</string>
								<string name="ScriptGuid">{9C01396F-AAFF-4E0A-A25C-333586DC1855}</string>
								<ProtectedString name="Source"><![CDATA[local function DeepCopyTable(tab)
	local newTab = {}
	
	for k, v in pairs(tab) do
		if type(v) == "table" then
			newTab[k] = DeepCopyTable(v)
		else
			newTab[k] = v
		end
	end
	
	return newTab
end

return DeepCopyTable]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX62732B06A81449D8BA3454DA329263CF">
						<Properties>
							<string name="Name">Middlewares</string>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX930577A0458C4545A3289F7278AE7C01">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ThunkMiddleware</string>
								<string name="ScriptGuid">{C58A44B3-4C26-44C6-97B6-9D2D775E69EE}</string>
								<ProtectedString name="Source"><![CDATA[local function ThunkMiddleware(store)
	return function(nextMiddleware)
		return function(action)
			if typeof(action) == "function" then
				action(store.dispatch, store.getState)
				return
			end
			nextMiddleware(action)
		end
	end
end

return ThunkMiddleware]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX49607659BAC84BF1BA46525CB36C4579">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SpunkMiddleware</string>
								<string name="ScriptGuid">{01225E57-9691-4729-A0AA-B00499C45087}</string>
								<ProtectedString name="Source"><![CDATA[--[[
	Spunk stands for "Spawned Thunk", which asynchronously
	spawns thunks rather than calling them synchronously.
	
	This could be preferable due to Roblox not being NodeJS
	or having a Promise library (unless you use roblox-ts)
--]]

local FastSpawn = require(script.Parent.Parent.Util.FastSpawn)

local function SpunkMiddleware(store)
	return function(nextMiddleware)
		return function(action)
			if typeof(action) == "function" then
				FastSpawn(action, store.dispatch, store.getState)
				return
			end
			nextMiddleware(action)
		end
	end
end

return SpunkMiddleware]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXA4A30195199244CF999BFC2705D68606">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">InspectorMiddleware</string>
								<string name="ScriptGuid">{6BAFB1AB-4B02-443E-B33D-C8F2CEBBBAF4}</string>
								<ProtectedString name="Source"><![CDATA[local function keyToStr(key)
	if type(key) == "string" then
		return key
	else
		return '[' .. tostring(key) .. ']'
	end
end

local function valueToStr(val)
	if type(val) == "string" then
		if val:find("'") then
			if val:find('"') then
				return '[[' .. val .. ']]'
			else
				return '"' .. val .. '"'
			end
		else
			return "'" .. val .. "'"
		end
	else
		return tostring(val)
	end
end

local function inspect(object, depth, maxDepth)
	local indent = string.rep("  ", depth)
	for k, v in pairs(object) do
		if type(v) == "table" and depth < maxDepth then
			print(indent .. keyToStr(k) .. " = {")
			inspect(v, depth + 1, maxDepth)
			print(indent .. "},")
		else
			print(indent .. keyToStr(k) .. " = " .. valueToStr(v) .. ",")
		end
	end
end

local function createInspectorMiddleware(options)
	options = options or {}
	local maxDepth = options.maxDepth or 4
	
	return function(store)
		return function(nextMiddleware)
			return function(action)
				print('{')
				inspect(action, 1, maxDepth + 1)
				print('}')
				nextMiddleware(action)
			end
		end
	end
end

return {
	createInspectorMiddleware = createInspectorMiddleware,
}]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX824D2FC3601744858260B161375F0347">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LoggerMiddleware</string>
								<string name="ScriptGuid">{B275E03B-1D53-447F-969E-DEB642D608AD}</string>
								<ProtectedString name="Source"><![CDATA[local function LoggerMiddleware(store)
	return function(nextMiddleware)
		return function(action)
			print(action.type)
			nextMiddleware(action)
		end
	end
end

return LoggerMiddleware]]></ProtectedString>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX2861D3102F0A47DEB0A7416C82A0429D">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">combineReducers</string>
							<string name="ScriptGuid">{072BDEBE-76AC-49CF-ABE6-E1DDBCE52291}</string>
							<ProtectedString name="Source"><![CDATA[local function combineReducers(reducersMap)
	-- Build into an array
	local gets = {}
	local sets = {}
	local reducers = {}
	for k, reducer in pairs(reducersMap) do
		local i = #reducers + 1
		reducers[i] = reducer
		gets[i] = function(get)
			return function(...)
				return get(k, ...)
			end
		end
		sets[i] = function(set)
			return function(...)
				set(k, ...)
			end
		end
	end
	
	-- Run action through array
	return function(action, get, set)
		for i = 1, #reducers do
			reducers[i](action, gets[i](get), sets[i](set))
		end
	end
end

return combineReducers]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX87F6451815BC4C3E870858566110A917">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">createStore</string>
							<string name="ScriptGuid">{F0DECE95-A365-47D0-B017-052743673F19}</string>
							<ProtectedString name="Source"><![CDATA[local FastSpawn = require(script.Parent.Util.FastSpawn)
local DeepCopyTable = require(script.Parent.Util.DeepCopyTable)

local function voidSelf(self, ...)
	if ( ... ) == self then
		return select(2, ...)
	else
		return ...
	end
end

local function createStore(reducer, initialState)
	local store = {}
	
	local store_enhancedDispatchChain = function(action)
		reducer(
			action,
			store.getState,
			store.setState
		)
	end
	local store_observers = {}
	local store_state = initialState
	
	function store.applyMiddleware(...)
		local middleware = voidSelf(store, ...)
		
		local nextHandler = middleware(store)
		store_enhancedDispatchChain = nextHandler(store_enhancedDispatchChain)
	end
	
	function store.dispatch(...)
		local action = voidSelf(store, ...)
		
		-- Dispatch to last middleware in the chain
		store_enhancedDispatchChain(action)
	end
	
	function store.getState(...)
		local keypath = { voidSelf(store, ...) }
		
		local base = store_state
		for i = 1, #keypath do
			if typeof(base) ~= "table" then
				return nil
			end
			base = base[keypath[i]]
		end
		
		-- Copy accessed tables to prevent mutation
		if type(base) == "table" then
			return DeepCopyTable(base)
		end
		return base
	end
	
	function store.setState(...)
		local keypath = { voidSelf(store, ...) }
		
		local value = keypath[#keypath]
		keypath[#keypath] = nil
		
		-- Mark each keypath that was visited
		local visitedPaths = {''}
		local lastVisitedPath = nil
		for i = 1, #keypath do
			local key = keypath[i]
			local nextVisitedPath
			if lastVisitedPath then
				nextVisitedPath = lastVisitedPath .. "." .. key
			else
				nextVisitedPath = key
			end
			lastVisitedPath = nextVisitedPath
			visitedPaths[#visitedPaths + 1] = nextVisitedPath
		end
		
		-- Find base to mutate
		local base = store_state
		for i = 1, #keypath - 1 do
			if typeof(base) ~= "table" then
				error("Attempt to set non-table key")
			end
			local key = keypath[i]
			base = base[key]
		end
		
		if #keypath == 0 then
			store_state = value
		else
			local lastKey = keypath[#keypath]
			if typeof(base) ~= "table" then
				error("Attempt to set non-table key")
			end
			base[lastKey] = value
		end
		
		-- Call subscribed listeners
		for i = 1, #visitedPaths do
			local observers = store_observers[visitedPaths[i]]
			if observers then
				local saveObservers = {}
				for j = 1, #observers do
					saveObservers[j] = observers[j]
				end
				
				for j = 1, #saveObservers do
					FastSpawn(saveObservers[j])
				end
			end
		end
	end
	
	function store.subscribe(...)
		local strKeypath, callback = voidSelf(store, ...)
		
		local observers = store_observers[strKeypath]
		if not observers then
			observers = {}
			store_observers[strKeypath] = observers
		end
		
		observers[#observers + 1] = callback
		
		-- Swap remove unsubscribe function (also maidable)
		return function()
			for i = 1, #observers do
				if observers[i] == callback then
					observers[i] = observers[#observers]
					observers[#observers] = nil
					break
				end
			end
			if #observers == 0 then
				store_observers[strKeypath] = nil
			end
		end
	end
	
	return store
end

return createStore]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX0203D62A7C5F48CC8C23025101A8236D">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Component</string>
							<string name="ScriptGuid">{1E11050D-5FF9-44EF-8631-63DD77B324B9}</string>
							<ProtectedString name="Source"><![CDATA[local Maid = require(script.Parent.Maid)
local FastSpawn = require(script.Parent.Util.FastSpawn)
local ParseKeypath = require(script.Parent.Util.ParseKeypath)
local RunService = game:GetService("RunService")

-- Frame loop bindings
local bindingHandlerActive = {}
local function getBindingHandler(queue)
	return function()
		bindingHandlerActive[queue] = true
		local requeueNextFrame = {}
		local handled = {}
		
		local component = next(queue)
		while component do
			queue[component] = nil
			if handled[component] then
				requeueNextFrame[component] = true
			else
				handled[component] = true
				
				FastSpawn(component.Redraw, component, component.getReducedState())
			end
			
			component = next(queue)
		end
		bindingHandlerActive[queue] = false
		
		for component in pairs(requeueNextFrame) do
			queue[component] = true
		end
	end
end

local renderStepQueue = {}
RunService:BindToRenderStep(
	"Rocrastinate Redraw",
	Enum.RenderPriority.Last.Value + 1,
	getBindingHandler(renderStepQueue)
)

local renderStepTwiceQueue = {}
RunService:BindToRenderStep(
	"Rocrastinate Second Redraw",
	Enum.RenderPriority.Last.Value + 2,
	getBindingHandler(renderStepTwiceQueue)
)

local heartbeatQueue = {}
RunService.Heartbeat:Connect(getBindingHandler(heartbeatQueue))

-- Abstract class
local Component = {}

function Component:constructor(store)
	local useStore = true
	if type(store) ~= "table"
	or type(store.getState) ~= "function"
	or type(store.setState) ~= "function" then
		useStore = false
		
		if self.Reduction then
			warn(
				"Components with a state reduction must have a store as the first argument of their constructor",
				debug.traceback()
			)
		end
	end
	
	
	self.maid = Maid.new()
	
	-- Map reduction
	local mappedStateKeys = {}
	local mappedStrKeypaths = {}
	local mappedKeypaths = {}
	if self.Reduction then
		for k, strKeypath in pairs(self.Reduction) do
			mappedStateKeys[#mappedStateKeys + 1] = k
			mappedStrKeypaths[#mappedStrKeypaths + 1] = strKeypath
			mappedKeypaths[#mappedKeypaths + 1] = ParseKeypath(strKeypath)
		end
	end

	local readOnlyCache = {}
	
	if useStore then
		self.getReducedState = function()
			local reducedState = {}
			for i = 1, #mappedStateKeys do
				local stateKey = mappedStateKeys[i]
				local keypath = mappedKeypaths[i]
				local strKeypath = mappedStrKeypaths[i]
				
				-- See if we have a cached value
				local cached = readOnlyCache[strKeypath]
				if cached ~= nil then
					reducedState[stateKey] = cached
				else
					local cached = store.getState(unpack(keypath))
					reducedState[stateKey] = cached
					readOnlyCache[strKeypath] = cached
				end
			end
			return reducedState
		end
	else
		self.getReducedState = function()
			return {}
		end
	end
	
	-- Bind queueRedraw
	
	self.queueRedraw = function()
		if self.RedrawBinding == "RenderStep" then
			renderStepQueue[self] = true
		elseif self.RedrawBinding == "RenderStepTwice" then
			if bindingHandlerActive[renderStepQueue] then
				renderStepTwiceQueue[self] = true
			else
				renderStepQueue[self] = true
			end
		elseif self.RedrawBinding == "Heartbeat" then
			heartbeatQueue[self] = true
		end
	end
	
	-- Subscribe to reduction
	if useStore and self.Reduction then
		for k, strKeypath in pairs(self.Reduction) do
			self.maid:GiveTask(
				store.subscribe(strKeypath, function()
					readOnlyCache[strKeypath] = nil
					self.queueRedraw()
				end)
			)
		end
	end
end

local reservedStatics = {
	new = true,
	Destroy = true,
}
local componentStaticMT = {
	__newindex = function(self, k, v)
		if reservedStatics[k] then
			error("Cannot override Component member '" .. k .. "'; key is reserved")
		else
			rawset(self, k, v)
		end
	end,
}

function Component:extend()
	local componentStatics = {}
	local componentMT = {
		__index = componentStatics
	}
	
	-- Construction/destruction
	function componentStatics.new(store, ...)
		local self = setmetatable({}, componentMT)
		Component.constructor(self, store)
		if componentStatics.constructor then
			componentStatics.constructor(self, store, ...)
		end
		
		self.queueRedraw()
		
		return self
	end
	function componentStatics:Destroy()
		self.maid:CleanupAllTasks()
		renderStepQueue[self] = nil
		heartbeatQueue[self] = nil
		renderStepTwiceQueue[self] = nil
	end
	
	-- Default redraw behavior
	componentStatics.RedrawBinding = "Heartbeat"
	
	-- Default noop
	function componentStatics:Redraw(reducedState) end
	
	return setmetatable(componentStatics, componentStaticMT)
end

return Component]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="PackageLink" referent="RBX6F86CE7B94734093B99646D93BB3DE0E">
						<Properties>
							<bool name="AutoUpdate">false</bool>
							<string name="Name">PackageLink</string>
							<int64 name="OriginalHash">-7979815819190081650</int64>
							<Content name="PackageIdSerialize"><url>rbxassetid://3097719615</url></Content>
							<string name="SymbolicLink"></string>
							<BinaryString name="Tags"></BinaryString>
							<int64 name="VersionIdSerialize">36</int64>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX8C3ADE32FF5A4377ADE8E2611EE85F51">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">actions</string>
					<string name="ScriptGuid">{EB82FCE1-B826-41B2-B591-D6DDFAD41760}</string>
					<ProtectedString name="Source"><![CDATA[local exports = {}

exports.enableApp = function()
	return {
		type = 'SET_ENABLED',
		payload = true,
	}
end
exports.disableApp = function()
	return {
		type = 'SET_ENABLED',
		payload = false,
	}
end

exports.setViewportTemplate = function(selection)
	return {
		type = 'SET_VIEWPORT_TEMPLATE',
		payload = selection
	}
end
exports.toggleTemplateSelectionEnabled = function()
	return {
		type = 'TOGGLE_IS_SELECTING_TEMPLATE',
	}
end
exports.toggleAspectRatioLocked = function()
	return {
		type = 'TOGGLE_ASPECT_RATIO_LOCKED',
	}
end

-- Slider spunk sagas (De-converted from SagaMiddleware until I rework Rocrastinate saga)
exports.ViewportCameraSliders = {
	PITCH = 'PITCH',
	YAW = 'YAW',
	ZOOM = 'ZOOM',
	FIELD_OF_VIEW = 'FIELD_OF_VIEW',
}
exports.setViewportCameraSliderValue = function(slider, value)
	return {
		type = 'SET_VIEWPORT_CAMERA_SLIDER_VALUE',
		payload = {
			slider = slider,
			value = value,
		}
	}
end

exports.MapSliderTypeToSliderIndex = function(sliderType)
	if sliderType == exports.ViewportCameraSliders.PITCH then
		return "pitch"
	elseif sliderType == exports.ViewportCameraSliders.YAW then
		return "yaw"
	elseif sliderType == exports.ViewportCameraSliders.ZOOM then
		return "zoom"
	elseif sliderType == exports.ViewportCameraSliders.FIELD_OF_VIEW then
		return "fieldOfView"
	end
	
	return nil
end
local ConstrainSliderValue = require(script.Parent.Util.ConstrainSliderValue)
exports.setViewportCameraSliderIncrement = function(slider, value)
	return function(dispatch, get)
		local sliderIndex = exports.MapSliderTypeToSliderIndex(slider)
		if not sliderIndex then
			error("Invalid slider type: '" .. slider .. "'")
		end
		
		local sliderSettings = get("viewportCamera", "sliders", sliderIndex)
		
		local newIncrement = value
		local newValue = ConstrainSliderValue(
			sliderSettings.value, newIncrement, sliderSettings.quantizationBasis, sliderSettings.minValue, sliderSettings.maxValue
		)
		
		dispatch (exports.setViewportCameraSliderValue(slider, newValue))
		dispatch {
			type = 'SET_VIEWPORT_CAMERA_SLIDER_INCREMENT',
			payload = {
				slider = slider,
				value = newIncrement
			}
		}
	end
end

-- Viewport resize input spunk sagas (De-converted from SagaMiddleware until I rework Rocrastinate saga)
exports.ViewportResizeFactors = {
	WIDTH = 'WIDTH',
	HEIGHT = 'HEIGHT',
	ASPECT_RATIO = 'ASPECT_RATIO',
}
local resizeViewport = require(script.resizeViewport)
exports.resizeViewportInput = function(primaryFactor, value)
	return function(dispatch, get)
		if primaryFactor == exports.ViewportResizeFactors.WIDTH then
			resizeViewport.resizeViewportWidth(dispatch, get, value)
		elseif primaryFactor == exports.ViewportResizeFactors.HEIGHT then
			resizeViewport.resizeViewportHeight(dispatch, get, value)
		elseif primaryFactor == exports.ViewportResizeFactors.ASPECT_RATIO then
			resizeViewport.resizeViewportAspectRatio(dispatch, get, value)
		else
			error("Invalid viewport resize input factor: " .. tostring(primaryFactor))
		end
	end
end

local themes = require(script.Parent.themes)
exports.nextTheme = function()
	return function(dispatch, get)
		if get('theme', 'name') == themes.Dark.name then
			dispatch { type = 'SET_THEME', payload = themes.Light }
		else
			dispatch { type = 'SET_THEME', payload = themes.Dark }
		end
	end
end

return exports]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXEEF580E57798427AA381686375D18901">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">resizeViewport</string>
						<string name="ScriptGuid">{7047FB95-2E32-4EA4-926E-C3688B4512E7}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate

local function gcd(a, b)
	if b == 0 then
		return a
	else
		return gcd(b, a % b)
	end
end

local resizeViewportWidth = function(dispatch, get, value)
	dispatch { type = "SET_VIEWPORT_WIDTH", payload = value }
	
	local aspectRatioLocked = get("viewport", "aspectRatioLocked")
	
	if aspectRatioLocked then
		local aspectRatio = get("viewport", "aspectRatio")
		
		dispatch { type = "SET_VIEWPORT_HEIGHT", payload = value * aspectRatio.y / aspectRatio.x }
	else
		local height = get("viewport", "height")
		height = math.floor(height + 0.5)
		local denominator = gcd(value, height)
		
		dispatch { type = "SET_VIEWPORT_ASPECT_RATIO", payload = {x = value / denominator, y = height / denominator} }
	end
end

local resizeViewportHeight = function(dispatch, get, value)
	dispatch { type = "SET_VIEWPORT_HEIGHT", payload = value }
	
	local aspectRatioLocked = get("viewport", "aspectRatioLocked")
	
	if aspectRatioLocked then
		local aspectRatio = get("viewport", "aspectRatio")
		
		dispatch { type = "SET_VIEWPORT_WIDTH", payload = value * aspectRatio.x / aspectRatio.y }
	else
		local width = get("viewport", "width")
		width = math.floor(width + 0.5)
		local denominator = gcd(value, width)
		
		dispatch { type = "SET_VIEWPORT_ASPECT_RATIO", payload = {x = width / denominator, y = value / denominator} }
	end
end

local resizeViewportAspectRatio = function(dispatch, get, value)
	dispatch { type = "SET_VIEWPORT_ASPECT_RATIO", payload = value }
	--dispatch { type = "SET_VIEWPORT_ASPECT_RATIO_LOCKED", payload = true })
	
	local oldWidth = get("viewport", "width")
	local oldHeight = get("viewport", "height")
	
	if oldWidth / value.x > oldHeight / value.y then
		-- Scale width down to match height
		dispatch { type = "SET_VIEWPORT_WIDTH", payload = oldHeight * value.x / value.y }
	else
		-- Scale height down to match width
		dispatch { type = "SET_VIEWPORT_HEIGHT", payload = oldWidth * value.y / value.x }
	end
end


return {
	resizeViewportWidth = resizeViewportWidth,
	resizeViewportHeight = resizeViewportHeight,
	resizeViewportAspectRatio = resizeViewportAspectRatio,
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX18EFD50ACFEB4843A08B33880CA0F03C">
				<Properties>
					<string name="Name">io</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX33BFE8C39C2C424A8CD8CE69E644536A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SelectionTracker</string>
						<string name="ScriptGuid">{76CF0BE6-3B1D-49A0-9B4E-EB305F127042}</string>
						<ProtectedString name="Source"><![CDATA[local dependencies = require(script.Parent.Parent.dependencies)
local Rocrastinate = dependencies.Rocrastinate
local actions = require(script.Parent.Parent.actions)

local SelectionTracker = Rocrastinate.Component:extend()

function SelectionTracker:constructor(store)
	self.store = store
	
	local function updateSelection()
		self.selection = game.Selection:Get()
		
		self.queueRedraw()
	end
	
	self.maid:GiveTask(game.Selection.SelectionChanged:Connect(updateSelection))
	
	updateSelection()
end

SelectionTracker.Reduction = {
	selectingTemplate = "viewport.selectingTemplate",
}
SelectionTracker.RedrawBinding = "Heartbeat"
function SelectionTracker:Redraw(reducedState)
	if reducedState.selectingTemplate then
		self.store.dispatch(actions.setViewportTemplate(self.selection))
	end
end

return SelectionTracker]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX2EC267DEEE24496AAF37FC46BBAB1A71">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">themes</string>
					<string name="ScriptGuid">{C9506235-AADE-41AA-9772-D6B4A94F6A9E}</string>
					<ProtectedString name="Source"><![CDATA[local interface = {
	name = "string",
	primaryBackgroundColor = "Color3",
	secondaryBackgroundColor = "Color3",
	sliderColor = "Color3",
	primaryTextColor = "Color3",
	secondaryTextColor = "Color3",
	primaryTextSize = "number",
	fontDefault = "EnumItem",
	fontBold = "EnumItem",
	fontItalicized = "EnumItem",
	checkboxSelected = "Color3",
	checkboxUnselected = "Color3",
	primaryIconColor = "Color3",
	lockIcon = "string",
	unlockIcon = "string",
	checkIcon = "string",
	themeIcon = "string",
}

local dependencies = require(script.Parent.dependencies)
local Types = dependencies.Types

local themes = {
	Dark = require(script.Dark),
	Light = require(script.Light),
}

local ITheme = Types.Interface (interface)
for name, theme in pairs(themes) do
	assert(ITheme:Check(theme))
end

themes.recolorIconElement = function(element, iconName, theme)
	element.BackgroundColor3 = theme.primaryBackgroundColor
	element.ImageColor3 = theme.primaryIconColor
	element.Image = theme[iconName]
end
themes.recolorTextLabelElements = function(fontName, theme, textLabels)
	for i = 1, #textLabels do
		local element = textLabels[i]
		element.BackgroundColor3 = theme.primaryBackgroundColor
		element.TextColor3 = theme.primaryTextColor
		element.TextSize = theme.primaryTextSize
		element.Font = theme[fontName]
	end
end
themes.recolorTextBoxElements = function(theme, textBoxes)
	for i = 1, #textBoxes do
		local element = textBoxes[i]
		
		element.BackgroundColor3 = theme.secondaryBackgroundColor
		element.TextColor3 = theme.secondaryTextColor
		element.TextSize = theme.primaryTextSize
		element.Font = theme.fontBold
	end
end
themes.recolorCheckboxElements = function(theme, checkboxes)
	local reducedCheckboxTheme = {
		checkIcon = theme.checkIcon,
		uncheckedBackgroundColor = theme.checkboxUnselected,
		checkedBackgroundColor = theme.checkboxSelected,
		iconColor = theme.primaryIconColor,
		textColor = theme.primaryTextColor,
		textSize = theme.primaryTextSize,
		font = theme.fontItalicized,
	}
	
	for i = 1, #checkboxes do
		local element = checkboxes[i]
		element:SetTheme(reducedCheckboxTheme)
	end
end
themes.recolorFrameElements = function(theme, frames)
	for i = 1, #frames do
		local element = frames[i]
		
		element.BackgroundColor3 = theme.primaryBackgroundColor
	end
end
themes.recolorSliderElements = function(theme, frames)
	for i = 1, #frames do
		local element = frames[i]
		
		element.BackgroundColor3 = theme.sliderColor
	end
end

return themes]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX7638F3F73F3E497EB84C6D0532FFD308">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Dark</string>
						<string name="ScriptGuid">{939D72E5-5C05-4F3A-B172-481E71FE9050}</string>
						<ProtectedString name="Source"><![CDATA[return {
	name = "Dark",
	primaryBackgroundColor = Color3.fromRGB(54, 54, 54),
	secondaryBackgroundColor = Color3.fromRGB(24, 24, 24),
	sliderColor = Color3.fromRGB(255, 255, 255),
	primaryTextColor = Color3.fromRGB(255, 255, 255),
	secondaryTextColor = Color3.fromRGB(255, 255, 255),
	primaryTextSize = 18,
	fontDefault = Enum.Font.SourceSans,
	fontBold = Enum.Font.SourceSansBold,
	fontItalicized = Enum.Font.SourceSansItalic,
	checkboxSelected = Color3.fromRGB(),
	checkboxUnselected = Color3.fromRGB(),
	primaryIconColor = Color3.new(255, 255, 255),
	lockIcon = "rbxassetid://3110238916",
	unlockIcon = "rbxassetid://3110238113",
	checkIcon = "rbxassetid://3111101141",
	themeIcon = "rbxassetid://3118446304",
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX8DE7D704D7904CDB82EA299097299153">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Light</string>
						<string name="ScriptGuid">{88D1597C-1F76-4381-A5F1-F43F09C9C2F4}</string>
						<ProtectedString name="Source"><![CDATA[return {
	name = "Light",
	primaryBackgroundColor = Color3.fromRGB(255, 255, 255),
	secondaryBackgroundColor = Color3.fromRGB(211, 239, 255),
	sliderColor = Color3.fromRGB(0, 0, 0),
	primaryTextColor = Color3.fromRGB(0, 0, 0),
	secondaryTextColor = Color3.fromRGB(0, 0, 0),
	primaryTextSize = 18,
	fontDefault = Enum.Font.SourceSans,
	fontBold = Enum.Font.SourceSansBold,
	fontItalicized = Enum.Font.SourceSansItalic,
	checkboxSelected = Color3.fromRGB(211, 239, 255),
	checkboxUnselected = Color3.fromRGB(205, 205, 205),
	primaryIconColor = Color3.new(0, 0, 0),
	lockIcon = "rbxassetid://3110238916",
	unlockIcon = "rbxassetid://3110238113",
	checkIcon = "rbxassetid://3111101141",
	themeIcon = "rbxassetid://3118446062",
}]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX24FC460799134E9A8E2E56138609A064">
				<Properties>
					<string name="Name">Util</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBX001A6EDD27CB48FABCD7FC73121F5636">
					<Properties>
						<string name="Name">Debug</string>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXAB2188DA901441B791E5BC6DB6CE3CD5">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">FrameLog</string>
							<string name="ScriptGuid">{EF1B5700-67D0-442B-846F-7A57463696D4}</string>
							<ProtectedString name="Source"><![CDATA[local frameid = 0
game:GetService("RunService").Heartbeat:Connect(function()
	frameid = frameid + 1
end)

local lastLog = tick()
local function FrameLog(...)
	if tick() - lastLog > 1 then
		lastLog = tick()
		print("---------")
	end
	
	print("frame", frameid .. ":", ...)
end

return FrameLog]]></ProtectedString>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX477AC67C6D26471CA84FD1732E1C6E6F">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ConstrainSliderValue</string>
						<string name="ScriptGuid">{35012C5F-2147-4EDD-BECB-0F28E9AC5021}</string>
						<ProtectedString name="Source"><![CDATA[local function ConstrainSliderValue(value, quantization, quantizationBasis, minValue, maxValue)
	if math.abs(quantization) > 0 then
		-- Quantize
		value = value - quantizationBasis
		value = math.floor(value / quantization + 0.5) * quantization
		value = value + quantizationBasis
	end
	
	-- Clamp
	value = math.clamp(value, minValue, maxValue)
	
	return value
end

return ConstrainSliderValue]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="PackageLink" referent="RBXA882BB35A8DB49D18910582AE98BE164">
				<Properties>
					<bool name="AutoUpdate">false</bool>
					<string name="Name">PackageLink</string>
					<int64 name="OriginalHash">-4654262643991636104</int64>
					<Content name="PackageIdSerialize"><url>rbxassetid://3126492563</url></Content>
					<string name="SymbolicLink"></string>
					<BinaryString name="Tags"></BinaryString>
					<int64 name="VersionIdSerialize">1</int64>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBX9F74E0EA7C68425EB3AFE11C093AA31B">
		<Properties>
			<string name="Name">Instance</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX9CDEB6E4E0854EF883044B0F808FB3FE">
		<Properties>
			<Color3 name="Ambient">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="Brightness">2</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.752941191</R>
				<G>0.752941191</G>
				<B>0.752941191</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.501960814</R>
				<G>0.501960814</G>
				<B>0.501960814</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">3</token>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX4C260C0D3E5449D298F8D231E0E12F5A">
		<Properties>
			<bool name="HttpEnabled">true</bool>
			<string name="Name">HttpService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="DataStoreService" referent="RBX9CA20D7912A94D1B9329E2FB36505CCA">
		<Properties>
			<bool name="AutomaticRetry">true</bool>
			<bool name="LegacyNamingScheme">false</bool>
			<string name="Name">DataStoreService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBX47D1213BDC834D40B168E8676BC5EFAB">
		<Properties>
			<string name="Name">VirtualInputManager</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
</roblox>